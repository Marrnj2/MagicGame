{"version":3,"sources":["src/CST.ts","src/scenes/LoadScene.ts","src/scenes/MenuScene.ts","src/components/playerComponents/spells/spell.ts","src/components/playerComponents/spells/basicspell.ts","src/components/playerComponents/spellbook/SpellManager.ts","src/components/playerComponents/Player.ts","src/components/NPC/walker.ts","src/BSP/BinaryTree.ts","src/BSP/Point.ts","src/BSP/Container.ts","src/BSP/TreeNode.ts","src/BSP.ts","src/components/exit/exit.ts","src/scenes/PlayScene.ts","src/main.ts"],"names":[],"mappings":";;;;;AeAA;AHMA,AZNa,IYMb,GZNa,CAAA,GAAA,GAAK,EYMlB,GAAA,OAAA,CAAA,kBAAA,CAAA;AJJA,AEFA,ADAA,AEEA,AXDI,AeAJ,EfAI,EQCJ,AEFA,ADAA,AEEA,AIDA,IfAU,CSDV,CTCW,CUDX,CCEA,EHAA,AEFA,CKCA,GAAA,GLDA,CAAA,GKCA,CAAA,KLDA,CAAA,cKCA,CAAA;AHMA,AJLA,ACFA,AEEA,AXAQ,IYKR,AZLQ,IAAI,EAAC,KYKb,CZNW,EYMX,OAAA,CAAA,iBAAA,CAAA;AJLA,AEDA,ADDA,AEEA,AXCQ,AeDR,ILDA,AVEQ,AeDR,IfCY,EAAC,EQDb,ACFA,AEEA,CDDA,EKCA,CfDW,EeCX,OAAA,CAAA,oBAAA,CAAA;AHMA,AJJI,AEHJ,ADEI,AEGA,AXFI,IYIR,AZJQ,IAAI,EAAC,CQAT,ACDA,AEGA,GCEJ,EHLI,CGKJ,AHLgB,CAAZ,CEGA,CFHqB,AEGT,CHFZ,ACDA,CDCY,CCDiB,CGKjC,CAAA,CJJI,EAAyB,CGEzB,EAA+B,UCEnC,CAAA;AJHQ,AEJR,ADGQ,AEGA,AXNG,AeEX,GfHkB,CeGlB,KPEa,ACDA,AEGA,CFHL,ECHR,CFIQ,ACDS,CAAT,CMDR,CPEoB,EGEZ,AIJR,EPEQ,CGEiB,IIJzB,CAAA,IJIQ,gBIJR,CAAA;AHMA,AJHK,AECD,ADFI,AEGA,AXFJ,EAAA,EYGJ,GAAA,EHJa,AEGA,CFHL,CCEJ,EDFa,AEGT,CFHA,CTCS,CWEG,CXFF,GUCd,CAAY,ACCS,CDDrB,EAAqB,CAArB,CCCgB,CDDc,CAA9B,CCC6B,CDDU,CAAvC,EAA+C,KCC3C;ACCR,AFDQ,ADFH,AEGA,AXFG,AeAR,IfAQ,AeAJ,IAAI,CLCK,AVDA,CUCL,CVDM,AeAH,CfDO,CUED,CAAT,CKDO,MAAM,CAAC,IAAX,CAAgB;AHE3B,AJFI,AEEI,AVDA,AeAJ,EPDA,AOCA,EfAI,GeAC,CfAG,CUCC,AKDH,CLCF,AVDK,CAFK,CYGlB,AJFI,AOAuB,CPAvB,AEEa,CAAT,QFFJ,CAAA,QAAA,GAAA,UAAS,KAAT,EAA0B;AIa1B,AJXI,AECA,ADHR,AEGA,AXDQ,AeAJ,EAAA,EfAI,IQAI,AOAF,CLCG,ADHb,AEGA,AXDa,CUCL,AKDG,CHWP,AZXU,CAHI,CUID,AKHU,CHavB,AFVI,ADHR,CDEmB,EIWf,ADVJ,CHDsB,KAAK,IAAnB;AICK,AFCL,ADXR,AEEA,AXQQ,AeAJ,CNVJ,AEEA,CIQI,CNVJ,AEEA,CXQQ,GeAC,CfAG,CYAC,AFCA,AKDH,CLCF,AVDK,AeAF,GLCM,CAAT,CEDK,GAAS,GAAT,AGAF,CAAA,SAAD,EAAW,WAAA,CAAA,SAAX,EAAqB,WAAA,CAAA,SAArB,CAHiB;AHId,AJAL,AECA,AVNU,AeKd,EAAA,MPAQ,AOAF,CHAG,AFCA,CKDF,GHAE,EFCL,CEDY,AJAA,EECE,CEDT,AJAU,GECG,MFDd,CECc,CAAA,KAAJ,CFDC,AECS,CFDR,GECY,CFDb,AECc,EFDA,GECL,CAAW,KAAK,CAAL,GAAU,KAAK,CAAL,GAAO,CAA5B,CAAV,EAA0C,IAAI,CAAC,KAAL,CAAW,KAAK,CAAL,GAAU,KAAK,CAAL,GAAO,CAA5B,CAA1C,CAAd;AEAK,AJAH,AECL,ADLG,AEIA,AXZU,AeYV,CfZK,GeYL,GNJA,AEIA,CFJA,AEIA,CCAK,CJAA,EOAG,CNJR,CDIS,AOAA,CPAC,CIAL,AHJL,AEIA,GCAe,AJAV,AGAL,CCAK,CHJL,EDIkB,IGAlB,KHAK,IAA0B,IAAI,CAAC,KAAL,IAAc,SAA3C,EAAqD;AIClD,AJAC,AOFH,GAJgB,KPMb,CIAD,IJAM,CAAC,CIAP,GAAS,AJAR,CAAW,CIAZ,GJAgB,CAAC,SAAhB;AICD,AJAF,AEAX,AKAI,EAAA,OHAS,AFAb,AKAW,EAAC,GHAC,GAAQ,CFArB,CEAa;AACT,AFdJ,AKcQ,CLdR,EAAA,CKcQ,KHAJ,EGAW,EAAC,CHAZ,GAAe,EAAf,EGDQ;AHER,AJDM,AOCF,IAAA,KHAJ,CJDU,AOCA,EAAC,EPDG,CICd,AJDe,GICC,CJDV,CICN,CJDqB,QAAQ,CAAC,IAAI,CAAC,IAAN,CAAR;AIMjB,AJLE,AEAF,AKCI,MAAA,CLDJ,CAAA,CEKK,CJLC,COCG,EAAC,CHIV,AJLU,CAAC,EIKE,AFLb,GFAE,AEAF,EEKkB,AJLA,KIKlB,EFLA,CFA0B,CAAC,IAAI,CAAC,KAAN,CAAR;AIMlB,AJLC,AODM,KPLP,IIWK,MAAL,GAAc,KAAK,MAAnB;AACA,AGTI,SHSC,SAAL,GAAiB,CAAjB;AACA,AJLA,AOZmB,CAAhB,CAAX,EPYQ,KIKK,GJLG,CAAC,CIKT,GAAa,CAAb,EJLQ,CAAR;AIMA,AJLD,GAbH,MIkBS,KAAL,GAAa,EAAb;AACH;AJLL,SAAA,UAAA;AIMI,AJzBJ,CAAA,CIyBI,CJzBJ,EIyBI,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;AJzBS,OAAA,CAAA,UAAA,GAAA,UAAA;AI0BL,QAAI,aAAa,GAAG,IAAI,WAAA,CAAA,SAAJ,CAAc,CAAd,EAAgB,CAAhB,EAAkB,KAAK,KAAvB,EAA6B,KAAK,MAAlC,CAApB;AACA,AL1BR,AMDA,AVFA,IIGA,AMDA,AVFA,IS6BY,AC3BZ,CVFA,CIGA,GK0BiB,GAAe,EAAxB;AACA,AL3BR,AMDA,AVFA,AFAA,ACAA,IDAA,ACAA,IU8BY,CX9BZ,ACAA,GU8BgB,AX9BhB,ACAA,GU8BmB,IX9BnB,ACAA,CU8BwB,AX9BxB,ACAA,QDAA,ACAA,CDAA,ACAA,KU8BmB,CAAoB,aAApB,EAAkC,CAAlC,CAAX;AACA,AL5BR,AMDA,AVFA,QS+BY,EL5BZ,AMDA,AVFA,ES+BgB,GAAG,CL5BnB,AMDA,AVFA,EIGA,AMDA,AVFA,CS+BuB,YAAA,CAAA,UAAJ,CAAe,IAAf,CAAX;AACA,AL7B4B,AMDF,AVFU,AFC5C,ACAA,EKEoC,AMDF,AVFU,ESgCpC,AX/BR,ACAA,IU+BY,CAAC,EL7BuB,AMDF,AVFU,CIGR,AMDF,AVFU,CFC5C,ACAA,GWCkC,CD8B1B,AThCoC,CSgCtB,AL7Bc,AMDF,CVFU,CIGR,GK6B5B,CC9B0B,CAAA,AVFU,CIGR,AJHQ,CIGR;AK8B5B,AXhCR,ACAA,SUgCa,KAAL,GAAa,KAAK,WAAL,CAAiB,KAAK,KAAtB,EAA4B,KAAK,MAAjC,CAAb;AACA,ALzBJ,AMJA,AVeA,AFnBJ,ACAA,IUiCQ,KAAK,CAAC,AXjCd,ACAA,CKQI,AMJA,AVeA,IUfA,CAAY,AVeZ,AFnBJ,ACAA,CUiCQ,ALzBJ,AJWY,CScM,ALzBN,ANRhB,ACAA,GWII,CVeA,CIXA,AMJgC,CAAhC,AVe+B,CIXC,CAAhC,AMJyC,CAAzC,CD6BkB,ALzBuB,CAAzC,AMJmD,ENIA,AJWnD,CSckB,CTd6B,CSczB,EC7BtB,ENIA,AMJkE,ENIA,AJWlE,EAA8D,EUf9D,ENIA,AMJ+E,ENIA,IJW/E,EAAgF,SAAhF,EAAgG;ASexF,AL1BR,AMJA,ARLJ,ADAA,ADoBI,AFnB2B,ACAA,EDAA,ACAA,EGD/B,ADAA,IGSI,AMJA,AVeA,ESeY,CRnChB,AHC+B,ACAA,CDAA,ACAA,CKQ3B,AMJA,AVeA,CCpBJ,EGUQ,AMJA,ARNR,AFqBQ,CSce,EPnCvB,COmC2B,CXlCI,ACAA,CKSvB,AMJA,AVeA,CIXA,AMJA,AVeA,AFpBuB,ACAA,CUkCA,CAAC,CAAL,CLzBnB,AMJA,AVeA,CIXA,AMJA,AVeA,CSc4B,ARnCpC,AHC+B,ACAA,CED/B,AHC+B,ACAA,EKSvB,AMJA,AVeA,EScgC,ALzB1B,AMJA,ARNd,AFqBc,CSc2B,APnCzC,EDAA,CAAA,CGUQ,AMJA,AVeA,CSckB,CLzBN,AMJA,AVeA,CIXZ,AMJA,ARNR,COmCkD,APnClD,CEUsB,AMJA,CNId,AMJA,ED6B8C,ALzB9B,AMJA,ATNxB,CQmCuD,ARnCvD,ADqBQ,CScI,ARnCZ,CDqB4B,IIXpB,AMJA,GVeA,EIXwB,AMJA,AVeI,IIZhC,AMJA,ERLJ,CAAA,CAAA,EFqBQ,KAAuC,IAD3C;AGpBJ,AQAA,IRAA,AQAA,KAAA,GAAA,MRAA,CQAA,CAAA,CRAA,OQAA,CAAA,ORAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;AMoCY,AL/BS,AMEb,ARJR,ADDA,ADDa,AFCT,ACAA,IKGiB,AMEb,ARJR,ADDA,ADDa,KIIQ,AMET,AVNC,CIIQ,AMER,AVNA,CSmCG,AXlCZ,ACAA,GEAJ,CQkCoB,AC7BZ,AVNK,CSmCQ,AL/BA,AFFrB,EQIqB,AVNA,CSmCG,AL/BM,CK+BlB,AL9BJ,ANJJ,ACAA,CCDS,CSmCc,CAAC,AC7BpB,AZLJ,ACAA,GUkC2B,AL/BD,EAEtB,EK6B2B,CAAC,CAAxB,EAA2B,CAAC,AL/BV,CAAT,CK+BT,EAA+B;AAC3B,AL1BR,AMHA,APNR,ADCA,ADDA,ADAa,AWDb,IPUQ,AMHA,APNR,AHAa,AWDb,IFoCgB,CL1BJ,AMHC,AVNA,CISA,AMHC,APNd,AHAa,CFCL,ACAA,CYFR,CFoCoB,AC7BZ,CD6Ba,AC7BH,CNGV,AOVR,EbEQ,ACAA,CKQa,ANRb,ACAA,CUkCQ,CAAW,ATnCd,EUML,AZLA,ACAA,AYFR,CPUQ,AMHmB,AVNoC,AFCvD,ACAA,AYFR,IFoCkC,AXlC1B,ACAA,CWKA,CZLM,ACAA,CUkCuB,CAArB,IAA0B,KAAI,CAAC,MAA/B,eEpChB,CAAA;AFqCgB,AL1BR,AMHA,APPR,ADCA,ADDA,ADCQ,AFCI,ACAA,IKQJ,AMHA,EZLI,ACAA,EUkCI,CL1BH,AMHA,AVNH,AFCK,ACAA,CKQD,AMHA,ARNd,ADDA,ADCW,CAAD,AFCM,ACAA,EUkCI,AL1BZ,AJTK,CSmCQ,AL1BH,AJTJ,CAAJ,CEAV,ADDA,ADA+D,AFE/C,ACAA,CWKR,AZLQ,ACAA,CWKM,ARNtB,ADDA,CQoCgB,CAAY,AXlCZ,ACAA,CWKR,AZLY,ACAA,CKQZ,AMHkB,CNGC,IK0BQ,AXlCnB,ACAA,CKQR,ANRmB,ACAA,EUkCW,AC7B9B,CD6BmB,AC7BQ,GD6BS,EC7BpC,GD6BwC,CAAC,KAAL,IAAc,IAAI,CAAC,CAAL,GAAS,CAAvB,CAA5B,IAA0D,KAAI,CAAC,MAA/D;ALzBR,ADXR,ADC0C,ADDF,ADEhC,AFDM,ACAA,AYDd,ETC0C,ADDF,EGWhC,AOXR,CbCQ,ACAA,IKUK,AJTH,CISI,ADXd,AHEW,AFCD,ACAA,CGFgC,ADDF,ADE9B,CEDgC,ADDF,AUAxC,CXEa,CAAH,CAFqD,AWA/D,CRAA,CCWQ,CAAc,ADXtB,GCWQ,CAAkB,AHXc,ECCE,ADDF,ECCE,IEUlC,AHXgC,AUAxC,CPWmC,AHXK,AUAxC,CTC0C,CAAA,GEUlC,EOXR,CAAA,0BAAA,CAAA,CAAA;AFqCgB,AC7BR,APRoB,AHGpB,AFCH,ACAA,EIJuB,EOQpB,KAAI,AVLF,CUKG,AVLF,CGHiB,AHGlB,CGHkB,CMqCR,ATlCP,CAAH,CAHqD,ESqCvC,CAAC,ANrCG,EAAA,CMqCA,CAAZ,EAAe,CAAC,AC7BxB,CPRoB,CAAA,CMqCO,IAAI,CAAC,CAAxB,EAA2B,CAAC,EAA5B,EAA+B;AAC3B,AL1BZ,AFTJ,ADEA,ADDI,AWFR,IPUQ,AOVR,KPUY,AJRF,AWFV,CPUa,AJRF,CEDP,ADEA,ADDQ,CAAF,AWFV,EFoCwB,ATlCV,CAAJ,ISkCmB,ERjCzB,CQiC4B,ARjChB,CCFZ,CAAY,CESR,EHPJ,AUHJ,CAAA,CFoCuC,APnCnC,ADE+B,ECFD,COmCS,GEpC3C,CVGI,AUHJ,CFoC+C,CAAC,ARjCE,KQiCP,CEpC3C,CVGI,AUHJ,CFoCwD,AEpCxD,CFoCoB,ARjC6C,IAA7D,EAAyE,SAAzE,EAAyF;AQkCzE,AC9BZ,APFJ,ADJA,ADEA,ADL2D,AFM3D,ACDA,EDCA,ACDA,EWII,CVTK,GEGT,ADEA,CSIQ,CD8BQ,AC9BP,CPFT,ALDA,ACDA,CDCA,ACDA,CGFA,ADEA,EQkCoB,CAAC,APnCjB,ADEA,CECJ,CAAY,GMgCI,AXjChB,ACDA,CUkC2B,APnCvB,ADEA,AHAJ,ACDA,CIEA,ADHI,ADEA,EEC4B,COE5B,APFJ,CMgCgB,APnCZ,ADEA,CECqC,ADHrC,ADEA,AFDJ,CIEA,ALDA,EWiCoC,ANhCe,AJFnD,CGDI,ADEA,AHAJ,EIFU,ADEA,EQiC8B,CAAC,CNhCzC,CDHe,ADEX,CEEA,ADJY,CDEA,EQiCA,AVlChB,CDCA,GIFU,CCGV,ADHwB,ADEpB,EEE6C,AFFzB,GCFpB,EAA0B,EDE1B,EAA4B,CCF5B,GDEA,ECFgC,ADEC,ICHrC,KDGI,KAA2C,IAD/C;AQmCgB,AL3BZ,ADNJ,AHDS,AFCL,ACFJ,AYFJ,IPUQ,AJPK,AWHb,IRII,AJFA,CKQQ,AJPC,AFCA,CWiCO,AL3BP,AJPA,AWHb,GRII,ALAI,ACFJ,AYFJ,CbIkB,CWiCM,CAAC,AN/BjB,AJJJ,ECCS,CFCL,CAAgB,ACFpB,CUmCgB,ATlC4B,CSkCjB,AN/BvB,CAAA,GCIA,ANNA,CWiC4B,AN/B5B,CAAA,ALFuB,AaJ/B,CAAA,CFqCuC,EN/B/B,EM+BmC,AN/B7B,CM+B8B,CAAb,AErC/B,CAAA,EFqCgD,AN/BxC,CM+BY,CN/BA,CAAZ,EM+B6C,AN/B/B,CAAd,EAAgB,EM+BiC,CAAC,IN/BlD,ALFA,EWiCY,GN/BY,GQNhC,CRII,AQJJ,CAAA;AFsCiB,AC/BT,ARLA,ADJK,ADML,AFCA,IYEA,ARLA,ADJK,KSSD,ARLA,ADJC,ADMH,AFCG,CYEA,ARLA,ADJA,EDKmC,CFExC,CAAU,CIHV,CQKA,ERLa,CQKC,AZFd,CAAgB,GIHhB,CDJK,CSSL,ETTsB,EAAjB,AHOL,EAA0B,oBAA1B;AWkCK,AL5BL,ADJA,AHFA,AFCA,ACHA,AYFR,IPUQ,ADJA,AQNR,IZEY,CKQA,ADJC,AHFH,AFCG,CMKA,ADJC,GAAN,ALDA,AaLR,CRMkB,ALDA,EMKV,ELRc,CKQA,ELRG,CIIjB,CAAmB,ECInB,ANLA,CAAsB,ACHA,EIItB,CJJiB,CAAS,GDG1B,EAA8B,ACHb,CAAe,KAAK,IAAL,CAAU,QDG1C,ACHgC,CAAmB,CDGD,ICHlB,GAA2B,CAA1C,EAA6C,KAAK,IAAL,CAAU,QAAV,CAAmB,MAAnB,GAA4B,IAAzE,EAA8E,MAA9E,CAAjB;AUqCC,AChCJ,APAG,ADFH,ADFG,ADDwC,AFIpC,ACHJ,AYHR,IROQ,AJJA,CUyBA,AT1BK,CFID,EGHD,CEIE,CAAC,GAAN,AFJO,CEIG,AFJF,AFAE,CAAC,CDGG,EAAC,EADmC,IKElD,CAAqB,AFJlB,GEIH,AFJsB,CEIG,AFJtB,AFAH,KIIA,AFJ4B,CAA5B,EAA8B;AQqC9B,AL7BA,ADHA,AFJI,ADYJ,AFTI,ACHJ,AYJR,IPWQ,ADHA,AHQA,ECZI,AHGA,GWiCC,AL7BD,ADHC,AHQD,ADZC,CKOA,ADHC,AHQD,AWhBb,CVIgB,CAAC,CEIT,CMgCA,AL7BA,ADHU,AJJV,CKOU,ALPC,CYJnB,CFwCqB,ARpCT,AHGW,CaPvB,CbOwB,CGHC,ADYjB,ADZA,CKOA,AHPkB,AFAD,CUoCjB,CRpCiB,ADYC,EGRlB,CAAsB,AFJC,AFAN,CAAA,EIIjB,CAA0B,AJJT,CEAU,AFAN,CEAO,CDY5B,EGRA,EJJiB,CAAW,IEAL,AFAvB,CEAuC,KAAI,CAAC,WAArB,EAAkC,CAAlC,CAAnB;AQqCJ,AChCJ,APAI,ADHJ,ADDQ,ADYJ,AFZkD,ACClD,AYNuB,EDS3B,ARHA,ASN2B,ERSvB,AHQA,ADXA,CDDA,CYIJ,ATJQ,CSIR,EDgCS,ANhCA,AHQD,CGRE,AHQD,CCZG,AULe,CVKd,AULc,ETM3B,AHAc,CGAd,AFWI,ADXW,CWGf,CAAA,APAI,AJHA,CIGc,AHQD,ADXC,CEDV,EEIJ,AQTuB,CRSL,AFJC,CSIvB,AVQI,AWjBuB,CTM3B,ADDQ,CCCR,CQGA,CDgCI,CAAwB,CVnCxB,AYNuB,CRSvB,AQTuB,CRSI,AJHD,CUmCE,CAAC,GNhC7B,CMgCA,CChCJ,CRHA,GAAA,CHA8B,SGAf,KAAf,EAA4B,CAA5B,EAAqC,CAArC,EAA8C,SAA9C,EAA8D;AOoC1D,AChCA,ARHA,ADDI,ADYJ,AFTA,ACFI,ICWJ,ECZI,AFCA,EUmCA,AChCA,ARHA,CFWA,AFTC,CESA,CCZG,AFCA,CEDC,AFCA,CDET,CWiCU,AXjCA,GWiCO,APnCJ,AFWb,ADXI,CWGU,AXHC,CUmCf,ARpCI,CCCY,AFWD,CURE,ARFb,CDFe,CFCf,CEDA,AFCiB,CGCb,AJCR,CYCsB,AZDA,CEStB,EDXqB,CAAA,EWGJ,AZDjB,CYC6B,AXHR,CDEQ,ACFJ,GGCjB,CAAA,EQES,AXHI,CAAW,CWGhC,GRFI,AHDA,CGCe,KAAK,EJCxB,EAAiD,CID7C,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,UAA9B,EAAyC,CAAzC,CADY,EAEZ,IAAI,YAAA,CAAA,OAAJ,CAAe,KAAK,KAApB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,SAA9B,EAAwC,CAAxC,CAFY,EAGZ,IAAI,YAAA,CAAA,OAAJ,CAAe,KAAK,KAApB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,WAA9B,EAA0C,CAA1C,CAHY,CAAhB;AEKH,ADFG,ADEA,ADLC,ADYD,AFTI,ACFH,AYDL,IRGI,AHSA,CChBA,AFGA,CDII,EIEA,CCFA,AHSA,CGTC,AHSA,CCZA,AUAT,ETKa,GAAG,AJFE,CESd,CFTe,CKAf,CAAe,AHSA,AFVkC,AaFrD,CRGI,EAAiB,AQHrB,CRGI,CDEqB,CAAC,CFOtB,IEPqB,CAArB;AO+BA,AChCA,AREI,ADLA,ADYJ,AFTI,ACFP,AYFD,GZNA,CGYQ,AFOJ,ECZI,AHGA,EYAD,ACJP,CTMa,AFOL,CEPM,AFOL,CSuBC,ARnCE,CAAC,CUDb,CDIa,AREL,CQFM,AREK,CO8BJ,AP9BP,ASLJ,CVAI,AHGW,CIEE,CQFd,AREC,AJFY,CYAD,ATHE,CQmCX,AP9Ba,AFOnB,CSuBiB,AEnCjB,CAAA,CXYmB,CCZE,ADYrB,CCZsB,CUAtB,CFmCA,AChCG,ACHH,CDGwB,CDgCA,AP9BpB,ESLJ,EVAiB,AUAX,CVAyB,KAAI,CAAC,CSGjC,CAAmC,KAAK,IAAL,ATHrB,CSG+B,ATH5C,MSGD,EAAoD,UAAU,CAAC,MAA/D,KAA0E,EAA7E,EAAgF;ADiC5E,AL9BR,AMFQ,APDJ,ADIH,ADNO,ADYJ,AFZiD,AaA7C,EPKR,CFRA,CCKI,AHUA,CFZA,CWmCI,ARnCA,AUAA,EPKR,CAAA,ADHS,AHUA,AWZE,CRED,AHUA,CUTG,ATHD,AUAA,CFmCE,ARnCD,CQmCE,ATvBX,CAAU,EUTN,ACHI,CFmCJ,AChCW,APDf,AQFQ,CFmCQ,AL9BpB,ADHkB,CCGlB,AHLQ,CUAI,CAAI,CDGR,ATHe,ADYnB,CSuBqB,AChCA,APDrB,AHUmB,CGVC,AFFhB,CGKR,EOLY,CFmCQ,AL9BpB,AJOI,AWZmB,CFmCQ,CChCvB,IPDJ,CMiCgB,ANjCe,CMiCG,CAAlB,EAAoB,CL9BxC,ADHI,IMiCyC,KAAzB,CAAZ;AACH,AL9BD,AMFC,ATHG,ADYJ,AFTA,ACHR,AYFc,IXcN,CWdA,CVEI,EGKA,CJOC,AFTA,ACHb,CCYc,AWZJ,CVAM,CAAC,CHGT,CAAU,AaNd,GXeI,CIPc,AJOA,ADZtB,CEAY,EGKa,AJOjB,CCZmB,ADYD,ECZd,CHGJ,CMEsB,ANFA,IEStB,CAA2B,CIPV,CAAY,GJO7B,AFTA,EAAiC,EMEhB,EAAjB,wBNFA,EAA8D;AYCjE,APFG,ADIJ,ADLK,AHGG,ACnBZ,CAAA,CGqBI,AHrB2B,CWc3B,CPGI,ELEI,ECnByB,CIiBzB,AJjB0B,CIiBzB,IDIT,AHrBJ,CGqBI,AHrBJ,CDmBsB,EAAC,EAD+C,IIGlE,CAAA,MCJI,ADIJ,CCJ+B,EDI/B,ECJI,UDIJ,CAEC,CAFD;AO8BI,AL9BA,AJOA,AFRI,AadC,IXsBL,AWtBK,EbcD,EMCD,CJOC,AWtBC,CXsBA,AWtBA,CF6CE,GL9BE,AOfJ,CPeK,EK8BV,AX/Be,AadH,EPeT,ANDa,CMCD,AOfV,KXsBL,GIPG,CAAqB,aAArB,CAAmC,KAAK,IAAxC,EAA6C,UAA7C,IAA2D,GAA9D,EAAkE;AK+BrE,AL9BO,AMFZ,APFQ,ADOJ,ADRI,AHC8D,AClBzD,AYOA,ETkBT,COCA,CNRI,AFDA,AUVK,CbWL,EClBK,CAAA,CWoBb,APFY,AFDA,AUVC,CRWA,AFDA,AUVA,CPeI,EMFjB,CRKI,CAAA,CEHQ,CAAW,AHLf,AFjBK,CIkBL,AFDa,AUVR,CRWS,CJlBT,CIkBL,AQXgB,EVUC,AUVZ,CPeD,AFGR,ADRsB,CGKK,AFG3B,IHzBS,EGyBT,ADRI,EAA0B,CCQ9B,GEHQ,CAAgC,AHLN,CAAC,GGK3B,EAAqC,EFG7C,ADRI,CCUH,CAFD,MEHQ,EAAgD,EAAhD;AACH,AMtBT,AV4BQ,AFPA,CYrBR,CAAkC,EV4B1B,CIRA,GMpBgC,CAAC,AV4B7B,AFPC,CEOA,CINA,ENDL,CAAU,EYrBgB,CAAe,MAAf,CAAsB,CZqBhD,CEOA,AFPsB,IYrB9B,CAAA,MZqBQ,EAAkC,wBAAlC,EAA2D;AWgC/D,AL9BQ,ADLJ,ADSR,ADVQ,AHKI,AaPP,EFsCD,ENnCI,AFDA,CQoCJ,CAAA,AX/BQ,GKJA,ADSZ,ADVY,CECC,AFDA,CGMI,IK8Bb,CAAA,AL9BQ,ANDU,CMCC,ADLf,CAAa,AFDb,AHKe,CGLD,CECd,ALG2D,CIMnE,CCTwB,ECKZ,ADLJ,AFDkB,CGMK,AHNJ,CECC,IFDpB,IQoCJ,CNnCI,CAA8B,CMmClC,AL9BQ,CAAgC,ADLpC,EAAiC,ECK7B,ADLJ,ECKyC,GK8B1B,IAAnB,EAAgC,CL9BxB,EAAgD,CAAhD;AK+BJ,AL9BC,AFvBT,AF4BQ,AFNI,CItBZ,CAA0C,EF4BlC,EFNI,EW+BD,APrDqC,CAAC,AF4BrC,CAAC,ESyBE,IAAI,APrDuB,AF4BlC,CE5BiD,AJsBlC,EEMD,AFNE,IItBkB,CAAsB,AF4BtC,CSyBlB,ATzBmB,ESyBE,EPrD7B,CAAA,AF4BsB,GAAa,KAAI,CAAC,UAAL,CAAgB,KAAI,CAAC,WAArB,EAAkC,CAAlC,CAA3B;AS0BI,ANpCJ,AHWA,AFT2D,AaJ/D,EAAA,EREI,AHWA,CFTA,IKFI,AHWA,CGXC,AHWA,CSyBI,AEtCb,CAAA,IXaI,EGXA,CHWc,EGXE,AQFpB,CAAA,EXasB,CAAC,ISyBf,ANpCJ,AQFJ,CFsCgC,ATzBd,EWblB,CXa+B,CSyBK,CAAC,GTzBF,CSyB3B,ATzB4B,KWbpC,KXa+B,CAAgB,KAAI,CAAC,WAArB,EAAkC,CAAlC,CAA3B;AS0BI,AL/BJ,ADLA,AFFH,AHOG,AaPA,IREA,ICKG,CDLC,ALKC,AaPA,CREA,CMoCI,EX/BT,AaPA,CPOS,ANAC,AaPA,CPOA,CDLV,GCKG,ADLW,ALKd,AaPA,CPOe,ANAC,AaPA,EREhB,MCKG,CK+BC,AL/BoB,ANAxB,AaPA,CFsC4B,CX/BF,AaPA,GFsCM,CAAC,KAA7B,EL/BD,CAAmC,KAAK,IAAxC,CNAH,AaPA,CPOgD,UAA7C,IAA2D,EAA9D,EAAiE;AAC7D,ADLJ,AHUA,AFJH,AaRG,GbbJ,CKeI,AHUA,KGVI,AHUA,AWZC,CREA,AHUA,CILI,EOPT,CXYA,AWZU,CXYA,EILN,CAAY,CDLhB,GAAiB,CAAjB,CCKI,CJKJ,GIL0B,CAAtB,COPJ,CAA2B,KAA3B,EAAiC,mBAAjC;AFsCI,AL9BH,ADLD,AFHJ,AUCC,EVDD,CUFA,CRKI,KAAI,CMmCG,ANnCF,EFHT,CAAA,CQsCe,CAAC,IAAL,GNnCP,AFHJ,CQsCwB,ARtCxB,EEGwB,IAAI,GMmCjB,GRtCX,CQsCqC,ERtCrC,EQsCyC,CAAC,ENnCd,CAAA,EMmCS,IAAc,ARtCnD,CEGwB,AFDvB,CECwC,AFHzC,KEG6C,CAAC,CMmCtC,EAAqD,ENnCrC,CAApB;AMoCQ,AL9BX,ANAD,EAAA,CMVA,QNUA,CAAA,CW8BiB,QX9BjB,CAAA,MAAA,EW8BY,CAAuB,AX9BnC,IW8BuC,CAAC,IAA5B,EAAiC,CX9B7C,GW8BiD,CAAC,KAAtC;AACH,ANpCL,AFDJ,ADUC,AFHG,AaRJ,EVCA,AUDA,EREI,KAAI,ALMC,CKNA,CQFT,CVCA,AUDA,CVCA,CHOI,CAAW,GKNX,CAAc,ELMd,AaRJ,CVCA,AHOsB,AaRtB,CVCA,GECI,CAAsB,CQF1B,GVCA,AUDA,GVCA,SUDA,GVCA,IECI;AMqCC,AL/BT,AHNQ,AHOI,AaRJ,MbQI,EGPA,AUDA,CPOZ,ANCe,EAAC,AaRD,GVCG,AUDA,CPOlB,AHNmB,GUDG,CVCV,CAAY,EHME,CaPJ,CAAA,IVCV,CAAqB,EUDf,EAAV,GVCI,CAA6B,KAAK,CAAlC,EAAoC,KAAK,CAAzC,EAA2C,KAAK,OAAhD,EAAwD,KAAK,OAA7D,IAAwE,GAA5E,EACA;AQqCH,AL5DL,ADuBQ,AFCI,ADQR,AFFQ,AaRJ,CPtBR,CAAoC,AJgChC,CSoBA,CN7BI,ELOI,CEER,CIhCsC,AJgCtC,AWVQ,CPtB+B,ADuB/B,CAAC,CFCI,EUFA,EbQI,CM9Be,AOsBhB,CPtB+B,AJgC/C,AFFkB,CEElB,CFJsB,AaNH,CVEX,AUFY,CVEG,CEDnB,CCvB4B,CAAsB,CDuB9B,CAApB,AFCI,CDQR,GIhCJ,AJgCI,CIhCJ,EOsBoB,EAAZ,KXUM,IAAV,EAAsB,KAAtB,EAAkC;ACP1B,ADQJ,AFFI,AaPJ,IXSA,EFFI,EaPA,EXSJ,CCRS,ADQT,AWTO,CbOG,EAAC,AaPD,KbOM,AaPD,CXSf,CCRI,ADQE,CCRc,CUDV,CbOC,AaPS,CbOE,EGNlB,GDQJ,CAAe,AWTL,CAAkB,GXS5B,CAAe,IAAf,EAAgB,CFFL,CAA8B,EEEzC,EAAqB,KAArB,EFFW,EAA0C;AW8BzD,ANrCI,AFEC,AHMO,AaRsB,EFqClC,ENrCI,CMqCJ,CAAA,AErCkC,EbQtB,CKRJ,CAAC,AQA6B,EAAE,CbQvB,EW6BjB,AX7BkB,CW6BlB,ANrCI,ALOqD,CaPzB,gBFqChC,GAAA,UAAkB,QAAlB,EAAoC,SAApC,EAAsD;AAClD,ARnCH,ADOG,AFDQ,AaTmC,GVH/C,GUG+C,EFsCvC,AX7BI,CECH,EFDM,EAAC,EaTwC,CFsCxC,CAAC,AEtCyC,GXUtD,CAAiB,CWV0C,IFsCvD,AT5BkB,CS4BC,GEtCK,EXU5B,CS4BI,CAA0B,AT5BD,CS4BzB,GAA8B,CT5BA,MAAlC,ES4B2C,CAAC,SAAV,CAAoB,MAApB,CAA2B,CAA7D,EAA+D;AAC3D,AT5BP,AFJwD,AaPgB,GXQzE,GWRyE,CbO1D,CAHO,GWmCV,IAAI,CAAC,AEvCkE,EAAE,CFuCjE,IEvCsE,IFuC9D,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,SAAV,CAAoB,MAApB,CAA2B,CAAvC,EAA0C,CAAC,IAAI,SAAS,CAAC,SAAV,CAAoB,MAApB,CAA2B,CAA1E,EAA6E,CAAC,EAA9E,EAAiF;AAC7E,ANvCX,AFGL,AHOY,AaXwB,KAAlB,CbWN,AaXJ,GVIR,GQoCoB,AX7BF,EAAE,CAAC,CW6BG,GAAI,ARpC5B,QQoCoC,CAAC,SAAT,CAAmB,MAAnB,CAA0B,CAA1B,GAA8B,KAAK,KAAnC,GAA2C,CAAvD;AACA,ARlEhB,ADqCI,AFRsB,AaHlB,CV1BR,CAAwC,ADqCpC,GFRI,EEQJ,CAAA,AWXQ,CV1B4B,CAAA,EQkEpB,CExCH,GAAG,CV1BpB,ADqCI,CCrCJ,ADqCI,CS6BuB,AExCJ,CAAC,EFwCO,AT7B3B,CS6B4B,ET7B5B,MS6BoC,CAAC,GT7BhC,AWXW,CXWhB,AWXoC,EXWtB,CAAd,ES6B4B,AT7BL,CS6BwB,GExC/B,CAAZ,EFwCwB,CAA0B,CAA1B,AT7B5B,EAAuC,CS6BmB,CAA/B,IAAoC,KAAK,KAAzC,GAAiD,CAAhE;AACA,ANxCZ,AHWI,AFAA,AaXA,ERAJ,MAAA,AQAQ,CRAR,AHWS,AFAA,IW6BQ,AExCJ,CbWT,CAAW,CaXC,EFwCJ,ANxCZ,CMwCuB,ANxCvB,AQAmB,CXWf,AWXgB,CbWhB,CAAkB,CW6BV,AT7BW,GGXvB,CMwC+B,ENxC/B,EQAgB,CFwCoB,AT7BhC,AWX4B,CAAhB,EAAmB,CFwCvB,IExCI,CRAhB,CACC,AQDyC,CRA1C,AQAgB,EAA6B,CAA7B,CAAZ;AFyCQ,AT7BR,AFAI,AaXJ,IAAA,EbWI,GEAC,AFAE,AaXF,CAAC,CbWE,EW6BK,ET7Bb,GS6BQ,AT7BM,CS6BK,EX9BD,CaVlB,CXWmB,AWXA,GFwCX,ET7BM,AWXU,EFwCM,CT7BH,CWX3B,EAA6B,CFwCM,CT7BH,EWXhC,CFwCQ,OT7BmB,CAAgB,KAAK,WAArB,EAAkC,CAAlC,CAA3B;AS+BK,ANzCT,AHWI,AFAI,AaXJ,ERAJ,ILWQ,EKXR,AQAQ,CRAR,AHWS,MAAL,AFAa,AaXF,EbWG,CKXlB,AHWkB,AWXA,CRAlB,ALSsB,EaTD,CAAC,CXWC,EGXvB,GAAA,AHWkB,GAAa,KAAK,CWXlB,CAAoB,ERAtC,MHW+B,CAAgB,AWX7B,EAA8B,GXWI,MWXlC,CAAd,IXW2B,EAAkC,CAAlC,CAA3B;AS+BC,AN1CL,AHYI,AFAI,AaXJ,MbWI,EKZR,CHYS,AWXA,GbWK,CKZd,AHYI,CAAU,AFAC,EKZf,AQCI,CAAa,EXWb,AFAgB,CKZpB,AHYoB,CAAhB,CWXA,CXWkB,AWXC,CXWnB,AFAW,CAAW,OaXtB,CAA6B,CAA7B,EAA+B,CAA/B,EAAiC,GAAG,CbWzB,AaX0B,CbWI,UAA9B,EAAyC,AaXpD,EAAmD,GAAG,CAAC,cAAvD;AXYA,AFAQ,AaXR,QbWQ,AaXJ,CXWC,IFAQ,EAAC,CADsC,AaVxC,EXWZ,CAAe,AWXA,IXWf,CWXoB,KAAL,CAAW,QAA1B;AFyCA,ANzCA,AHYA,AFAQ,AaXR,QFwCG,AX7BK,CKZH,AHYA,AWXA,EbWM,EAAC,AaXZ,CRDA,CAAW,CMyCA,AExCC,CFwCA,ET7BZ,CAAgB,AWXA,CRDhB,CAAkB,EHYlB,ES6BG,CAAmB,CExCN,CAAA,IFwCb,CAA0B,CAA1B,AExCS,CAAW,EFwCU,EExCrB,EAAgB,GAAG,CAAC,CFwCU,CAAC,GExC/B,EAA0B,GAAG,CFwCR,AExCS,CFwCW,KExCzC,CFwCqB,CAA2B,AExCX,CFwCjD,EAA8D,GExClD,EAA4C,QAA5C,CAAZ;AFyCI,ANzCA,AHYJ,AFHoD,AaRpD,MRDI,CLSO,CAHO,CKNX,AHYF,AWXA,EFwCG,ANzCA,IMyCI,AN1CM,CM0CL,AExCb,CAAa,EFwCG,ET7BhB,AWXA,CXWkB,AWXA,KFwCM,AT7BD,EWXvB,CAA0B,EFwCF,CT7BxB,AWXA,EAA8B,CFwCd,EExChB,EFwCgB,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,SAAV,CAAoB,MAApB,CAA2B,CAAvC,EAA0C,CAAC,IAAI,SAAS,CAAC,SAAV,CAAoB,MAApB,CAA2B,CAA1E,EAA6E,CAAC,EAA9E,EAAiF;AAC7E,ANzCJ,AHYJ,AFAI,AaXJ,MRDI,ALYA,GEAC,AWXA,GFwCO,AX7BF,EAAE,CKZC,ALYA,CW6BG,AExChB,CRDc,AQCD,CRHK,CM2CE,CAAC,CT7BrB,AWXA,CXWkB,AWXA,CFwCM,IT7BD,CS6BM,KAAT,AT7BpB,AWXA,CAA8B,EFwCO,GExCF,IAAnC,CFwC6C,CAAC,SAAT,CAAmB,MAAnB,CAA0B,CAAvD;AACA,ANzCJ,ALIc,AaHlB,KbGA,CKJI,GQCC,GFwCO,ANzCF,EAAC,EQCX,CAAa,EFwCM,ANzCH,EQChB,CFwCuB,AExCL,CFwCM,CNzCb,CAAW,CMyCK,KAAK,AExChC,CAA4B,CAA5B,EAA8B,CFwCP,AExCvB,EAAgC,CFwCQ,INzC7B,AQC0B,CRDI,GMyCO,CAAC,AExCP,ERD/B,EAAqC,IQChD,CFwCwC,CAAmB,AExCR,KAAK,CFwChB,CAA0B,CAA3C,GAA+C,CAA9D,CExC2C,GAAgB,EAAnE;AF0CQ,AN1CA,AHWR,AFCA,AaXA,QRDQ,CLYH,AaXA,GXUE,CS+BM,AN1CA,CLYb,CKZc,ALYH,CKbqC,AQEhD,CAAa,CFyCL,CAAW,CX9BnB,AaXA,CXUA,AFCiB,AaXA,EFyCT,GX9BS,CW8BU,AX9BV,EaXjB,CbWiB,AaXS,CbWL,CW8BW,GEzCD,CFyCvB,CX9BS,CAAW,CaX5B,EAAoC,CbWpC,IaXA;AF0CQ,AN1CA,AHWJ,AFCJ,AaXA,QRDQ,AQCJ,CbWC,EKZM,AHWF,CAAL,CS+BS,AN1CD,AQCH,CbWT,CAAW,CaXC,EFyCJ,CAAW,AEzCJ,CAAC,CbWhB,CAAkB,GaXlB,CFyCQ,IAAsB,KAAK,IAA3B;AAEH,AN9C2C,AHcxC,AFCJ,AaXJ,MbWI,CKfO,CAHO,AQOd,CbWG,EAAC,EEDK,GWVD,CbUM,EaVF,IAAI,CXUZ,AWVa,CXUI,CAAjB,GWVQ,CAAY,IAAI,CAAC,MAAL,KAAgB,KAAK,CAAC,MAAvB,GAAiC,CAA5C,CAAhB;AF2CC,AN3CG,AHWI,AFCJ,AaXJ,IAAA,ERDI,ALYA,KaXG,CRDG,AQCF,ERDI,CAAC,ALYA,AaXb,CAAY,CbWE,CAFI,GaTD,CAAC,QAAD,CAAjB;AF2CH,ANnDqB,ALoBd,AaXJ,GFsBJ,CEtBI,CRTA,CLoBI,KaXG,CbWG,AaXF,EbWG,CaXX,CAAY,GbWI,EaXC,CAAC,EbWP,CAAW,KaXL,CAAL,CAAgB,QAAhB,EAA0B,CbW3B,AaXX,CbWyC,CaXD,KAAK,CbWlC,AaXmC,EbWG,MaXJ,CAAL,CAAgB,QAAhB,EAA0B,CAAlE;ARCA,AHSI,AFEI,AaXR,QbWQ,AaXJ,CRAC,EHSI,CAAL,AWTI,CbWK,CKXb,CAAW,ALWG,AaXH,CbUsC,IaVjC,CRAhB,AQAiB,CRAC,OQAF,CAAL,CAAgB,QAAhB,EAA0B,CAA1B,GAA8B,KAAK,QAA9C;AF0CJ,ANzCQ,AHSI,AFEA,AaXR,EFyCJ,GAAA,CAAA,ANzCQ,ELWI,AaXJ,CRAG,EAAC,ALWG,CaXH,CXSK,AFED,EW8BhB,AEzCe,CFyCf,IN1CsB,AQCF,CFyCpB,AEzCqB,GFyCrB,AThCY,CAAiB,IWTT,CAAL,CXSH,AWTmB,GFyCzB,CAAN,EAAe,CAAf,CEzCe,CFyCQ,CEzCkB,CAA1B,GAA8B,KAAK,QAA9C;AF0CA,ANzCI,AHSI,AFDyC,AaRjD,MRAI,CLQO,CWiCP,AXpCc,CaLb,GFyCG,CEzCR,EFyCY,ANzCC,CMyCA,AEzCD,CRAE,CAFI,CM2CF,CEzCA,IFyCK,EEzCL,CAAA,EFyCJ,GAAiB,CAA7B,CEzCY,CAAS,IAAT,EAAc,IAAd,EAAmB,IAAnB,EAAwB,MAAxB,EAA+B,KAAK,IAApC,CAAZ;AF2CA,AN1CI,ALWA,AaXJ,MRAI,ALWA,GaXC,EF0CE,CN1CG,ALWA,EKXC,ALWC,CW+BZ,AX/Ba,IKXG,AQAhB,GAAkB,ERAP,CAAW,EQAC,GAAL,CAAS,IAAT,CAAc,EAAd,EAAkB,EAAlB,CRAP,CAA8B,AQAD,MRA7B,EAAqC,KQAG,KAAK,IAAL,CAAU,MAA3C,EAAqD;AF2C1E,AN1CW,AHQJ,AFLc,AaJuD,GFuC7E,EXnCI,CaJyE,ERCjE,GHQC,CAAL,CGRS,CQDoE,CRCnE,CADkC,AQAmC,MAAZ;ARE/D,AHQA,AFGR,Aab2F,MAAA,EREnF,CLWH,EKXM,AQFqF,EREpF,AHQC,AWVoF,CbajG,CAAW,MAAX,CAAkB,EEHV,CAAiB,OAAjB;ASkCZ,AN5CoD,AHWxC,AFGJ,AadmE,EF4C3E,GAAA,AE5CsB,CF4CtB,AX9BQ,AadJ,CRAW,CAHO,CLiBX,EAAC,IW8BZ,CAAA,CX/BsB,aW+BtB,GAAA,UAAe,SAAf,EAAmC,UAAnC,EAAoD;AAChD,ANzCI,ALWA,AadJ,MRGI,ALWA,EW8BA,CE5CC,GF4CG,ANzCE,EAAE,CMyCD,ANzCE,ALWA,EAAC,CAFI,CWgCH,AE5Cf,CAAgB,SF4CD,CAAA,KE5Cf,CAAgC,CAAhC,CF4CW,CAAa,SAAb,CAAX;ANhDkB,AHed,AFIA,AadJ,KRLA,CLmBI,GadC,EXUI,CAAL,AFIM,EAAC,IadX,CbcgB,EadC,GbcN,CAAW,AadD,QAAA,CAAA,OAAJ,CAAW,CbcjB,CAA8B,EadxB,EAAgB,GbctB,AadM,EbcgC,AadZ,GAApB,EAAwB,OAAxB,EAAgC,KAAK,IAArC,CAAjB;AF4CA,ANxCA,AHOQ,AFIA,AadR,QF2CG,AX7BK,CKXH,AQHA,IXUQ,AFIA,CKXb,CAAW,ALWG,CADmC,AabjD,CAAa,CF2CA,EE3Cb,CRGA,AQHiB,CF2CA,ANxCC,CMwClB,CTjCQ,CSiCW,ATjCM,IWVzB,CAA0B,EXUlB,GWVuB,SAA/B,EAAyC,KAAzC;AF4CI,ANxCA,AHOI,AFIA,AabX,GA5BD,GR8BQ,ELWI,CKXD,CMwCC,CNxCA,ALWG,EAAC,CW6BA,GAAG,ANzCG,IMyCC,CAAC,KAAL,CAAY,IAAI,CAAC,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CAAX;ANvCA,AHNJ,AFciD,MKR7C,CLQO,CAHO,OKLL,EAAC,CAFI;AM0Cd,ANvCA,AHOP,AFIO,AadR,EAAA,CXbA,GGgBQ,ALWA,IW4BI,CE1CZ,CRGc,ALWA,Aadd,EF0CgB,ANvCD,ALWC,CAAC,EW4BE,CAAP,CNvCQ,EQHpB,CF0CwB,AE1CxB,CF0CQ,CNvCO,CMuCW,ANvCA,GQH1B,GAAA,UAAO,ERGQ,CAA8B,CQH7C,EAAmB,GRGJ,EAAqC,AQHpD,EAA+B;AF2CnB,ANvCA,ALGU,AaNpB,KbME,GKHQ,CQHL,GF0CS,CNvCC,AQHf,CAAU,CRGM,EADkC,CMwC9B,EE1CpB,CF0CuB,KAAK,UAAL,CAAgB,SAAhB,CAAb;AACA,ANvCA,AHOhB,AFIQ,AadF,QF0CU,ANvCA,CHOhB,AFIa,AadF,ERGQ,CMuCC,CAAC,ANvCD,CHOpB,AFIQ,CAAW,EW4BH,CE1CV,CAAe,CF0CO,CX5BpB,CAAkB,GW4BO,AE1C3B,cF0CsB,CAAoB,MAAM,CAAC,CAAD,CAA1B,EAA8B,UAAU,GAAC,CAAzC,CAAZ;AACA,AN1CwC,AHvDxD,AFqEY,AadN,CXvDN,CAA4C,IFqEhC,CKdO,CM0CH,AN7CU,AHpDwB,CAAC,AFqEpC,AadJ,EbcK,CW4BI,CAAC,AE1Cf,CAAU,EXvD4B,CAAe,CSiG3C,AX7BU,EabpB,CF0CuB,ETjGe,CAAsB,ESiGhC,ITjGlC,CAAA,SSiG6B,CAAoB,MAAM,CAAC,CAAD,CAA1B,EAA8B,UAAU,GAAC,CAAzC,CAAb;AAEH,ANxCD,ALWA,AadJ,MRGI,ALWA,CWwBA,EEtCC,GRGK,CMyCF,CNzCI,CAAC,ALWA,EAAC,CAFI,CaZlB,CAAgB,OAAhB,CAAwB,aAAW,KAAK,IAAL,CAAU,MAA7C;AF6CQ,ANjDU,ALmBd,AadP,GALD,ERAI,CLmBI,MW8BQ,AX9BF,EAAC,IW8BO,CX9BF,EW8BK,GX9BV,CAAW,CW8BI,UAAL,CAAgB,MX9B1B,CAA8B,EW8BpB,CAAb,IX9BG,EAAsC;AW+BzC,ANzCR,ALWQ,QW8BA,AX9BA,CKXH,GMyCO,CAAC,AX9BA,CKXb,CAAW,ALWG,CADmC,CW+BzC,GAAY,CNzCpB,CAAkB,GMyCO,cAAL,CAAoB,MAAM,CAAC,CAAD,CAA1B,EAA8B,UAAU,GAAC,CAAzC,CAAZ;AACA,ANzCJ,ALWI,AafhB,MRIY,EMyCI,AX9BA,CKXD,AQJf,ERIgB,ALWG,CW8BC,CAAC,AX9BD,KW8BJ,AE7ChB,GF6C6B,CN1CH,IM0CQ,cAAL,CAAoB,MAAM,CAAC,CAAD,CAA1B,EAA8B,UAAU,GAAC,CAAzC,CAAb;AAEH,AN1CD,ALQ6C,AajEzD,CAAA,CAA+B,IRyDnB,CLQO,CAHO,Aa9DW,CAAC,KAAtC,CRyDqB,AQzDrB,ERyDsB,CAFI;AM6CjB,AN1CG,ALWA,MKXA,ALWA,MKXM,ALWA,EKXC,ALWC,CAAC,IKXG,KAAL,CAAW,kBAAX,CAA8B,MAA9B,EAAqC;AACxC,ALGU,Aa9Db,Kb8DL,Ea9DK,CR2DG,AQ3DH,KR2DQ,EAAC,CADkC,CQ1D3C,GAAA,SAAA;AFsGL,AN1CQ,ALWR,QKXQ,CLWH,EW+BE,AN1CI,EAAC,CLWZ,CW+BA,AX/BW,MAAX,CAAkB;AWgCrB,AN7CmD,ALc5C,GWYR,GXZQ,CKdO,CAHO,CLiBX,EAAC,IADU;AKTd,ALWA,MKXA,ALWA,MKXM,EAAE,CAAC,ALWA,EAAC,CAFI;AWiCtB,ANjDsB,ALmBd,EW8BR,GAAA,ANjDI,CMiDJ,AX9BQ,MAAM,EAAC,CW8Bf,CAAA,GX9BoB,KAAL,CAAW,CW8B1B,GAAA,UAAW,IX9BI,CAA8B,IW8B7C,EAA8B,CX9Bf,EAAsC;AW+BjD,ANzCA,ALWQ,QW8BJ,AX9BI,CKXH,EMyCE,EX9BM,CW8BH,ANzCV,CAAW,ALWG,EADmC,CW+BnC,CAAC,ENzCf,CAAkB,EMyCR,CAAW,SAAS,CAAC,CAAV,GAAc,IAAzB,CAAV;AACA,ANzCI,ALWI,MKXJ,EMyCA,AX9BI,CKXD,EMyCA,ANzCC,ALWG,EAAC,CW8BF,GN1CQ,CM0CJ,CAAC,KAAL,CAAW,SAAS,CAAC,CAAV,GAAc,IAAzB,CAAV;AACA,ANzCI,ALQ6C,MKR7C,CLQO,CWiCP,AXpCc,OWoCP,ANzCE,EAAC,CMyCO,AN3CH,IM2CO,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,MAAiB,GAAG,GAA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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["export const CST ={\n    SCENES:{\n        LOAD:\"LOAD\",\n        MENU:\"MENU\",\n        PLAY:\"PLAY\"\n    },\n    CASTDIRECTION:{\n        NORTH:0,\n        EAST:1,\n        SOUTH:2,\n        WEST:3\n    }\n}","import {CST} from\"../CST\"\nexport class LoadScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key:CST.SCENES.LOAD\n        })\n    }\n\n    preload(){\n        this.load.image(\"play\",\"./assets/play_button.png\")\n        this.load.image(\"options\",\"options_button.png\")\n        this.load.spritesheet(\"enemy\",\"/assets/enemy.png\",{\n            frameWidth:32,\n            frameHeight:32\n        })\n        this.load.spritesheet(\"Mage\",\"./assets/mage.png\",{\n            frameWidth:64,\n            frameHeight:64\n        })\n        this.load.spritesheet(\"FireBall\",\"./assets/Fireball_68x9.png\",{\n            frameWidth:68,\n            frameHeight:9\n        })\n        this.load.spritesheet(\"EarthBall\",\"./assets/EarthBall.png\",{\n            frameWidth:48,\n            frameHeight:48\n        })\n        this.load.image(\"IceBall\",\"./assets/IceBall.png\")\n        \n    }\n    create(){\n        this.anims.create({\n            key:\"EarthBall\",\n            frameRate:10,\n            frames:this.anims.generateFrameNames(\"EarthBall\",{\n                start:0,\n                end:12\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"FireBall\",\n            frameRate:10,\n            frames:this.anims.generateFrameNames(\"FireBall\",{\n                start:0,\n                end:59\n            }),\n            repeat: -1\n        });\n        this.scene.start(CST.SCENES.MENU)\n        this.anims.create({\n            key:\"down\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:0,\n                end:2\n            }),\n            repeat: -1\n        })\n        this.anims.create({\n            key:\"left\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:3,\n                end:5\n            }),\n            repeat: -1\n        })\n        this.anims.create({\n            key:\"right\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:7,\n                end:9\n            }),\n            repeat: -1\n        })\n        this.anims.create({\n            key:\"up\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:10,\n                end:12\n            }),\n            repeat: -1\n        })\n    }\n\n}","import {CST} from \"../CST\"\nexport class MenuScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key:CST.SCENES.MENU\n        })\n    }\n    create(){\n        let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.40,\"play\")\n        playButton.setInteractive();\n        this.scene.start(CST.SCENES.PLAY)\n\n        playButton.on(\"pointerup\",() =>{\n            this.scene.start(CST.SCENES.PLAY)\n        })\n    }\n}","export default abstract class Spell extends Phaser.Physics.Arcade.Sprite{\n    readonly SPEED = 200\n    readonly DIRECTIONS:{[index:number]:[x:number,y:number]} = {\n        0:[0,-1],\n        1:[1,0],\n        2:[0,1],\n        3:[-1,0]\n    }\n    readonly BOXVALUE:{[index:number]:number} = {\n        1:180,\n        3:0\n    }\n\n    textureKey:string\n    scene:Phaser.Scene\n    myDirection:number\n    playerX:number\n    playerY:number\n    xSpeed:number\n    ySpeed:number\n    constructor(scene:Phaser.Scene,playerX:number, playerY:number,textureKey:string,direction:number){\n        super(scene,playerX,playerY,textureKey)\n        this.textureKey = textureKey\n        this.scene = scene\n        this.playerX = playerX\n        this.playerY = playerY\n        this.myDirection = 0\n        scene.add.existing(this)\n        scene.physics.add.existing(this)\n        this.addToUpdateList()\n        this.addToDisplayList()\n        this.xSpeed = this.SPEED * this.DIRECTIONS[this.myDirection][0]\n        this.ySpeed = this.SPEED * this.DIRECTIONS[this.myDirection][1]\n        this.play(textureKey)\n    }   \n    preUpdate(time:number,delta:number){\n        super.preUpdate(time,delta)\n        this.setVelocity(this.xSpeed,this.ySpeed)\n    }\n    Cast(x:number,y:number,direction:number){\n        this.myDirection = direction\n        this.xSpeed = this.SPEED * this.DIRECTIONS[this.myDirection][0]\n        this.ySpeed = this.SPEED * this.DIRECTIONS[this.myDirection][1]\n        this.body.reset(x,y)\n        this.setActive(true)\n        this.setVisible(true)\n        this.setVelocityX(this.xSpeed)\n        this.setVelocityY(this.ySpeed)\n        switch(direction){\n            case 3:\n                this.setRotation(0)\n                break;\n            case 0:\n                this.setRotation(1.5708)\n                break;\n            case 1:\n                this.setRotation(3.14159)\n                break;\n            case 2:\n                this.setRotation(4.71239)\n                break;\n        }\n    }\n    abstract Behavior() : any\n}","import Spell from \"./spell\"\n\nexport default class BasicSpell extends Spell{\n    readonly TRAVELDISTANCE = 10\n    angle:number\n    hitboxX:number\n    hitboxY:number\n    constructor(scene:Phaser.Scene,playerX:number,playerY:number,name:string,direction:number){\n        super(scene,playerX,playerY,name,direction)\n        if(this.myDirection % 2 === 0){\n            this.angle = -90 * this.DIRECTIONS[this.myDirection][1]\n            this.hitboxX = 10\n            this.hitboxY = 70\n        }else{\n            this.angle = this.BOXVALUE[this.myDirection]\n            this.hitboxX = 70\n            this.hitboxY = 10\n        }\n        this.setSize(this.hitboxX,this.hitboxY)\n        this.setAngle(this.angle)\n    }\n    CalculateBox(){\n\n    }\n    Behavior(){\n        if (Phaser.Math.Distance.Between(this.x,this.y,this.playerX,this.playerY) > 100)\n        {\n            this.setActive(false)\n            this.setVisible(false)\n        }\n    }\n}","import BasicSpell from \"../spells/basicspell\";\nimport Spell from \"../spells/spell\";\n\nexport default class SpellManager extends Phaser.Physics.Arcade.Group{\n    scene: Phaser.Scene\n    constructor(scene:Phaser.Scene){\n        super(scene.physics.world,scene)\n        this.scene = scene\n\n       \n\n    }\n    CreateNewSpell(index:number,x:number,y:number,direction:number){\n        let spellList = [\n            new BasicSpell(this.scene,0,0,\"FireBall\",0),\n            new BasicSpell(this.scene,0,0,\"IceBall\",0),\n            new BasicSpell(this.scene,0,0,\"EarthBall\",0)\n        ]\n        let spell = spellList[index]\n            spell.Cast(x,y,direction)\n        \n    }\n    Remove(){\n\n    }\n\n    update(){        \n        \n    }\n}","import SpellManager from \"./spellbook/SpellManager\";\n\nexport class Player extends Phaser.Physics.Arcade.Sprite{\n  \n    keyboard: Phaser.Input.Keyboard.KeyboardPlugin\n    spellManager:SpellManager;\n    currentSpell: number\n    direction:number\n    health:number\n    constructor(scene:Phaser.Scene, x:number,y:number, textrue:string,\n        keyboard:Phaser.Input.Keyboard.KeyboardPlugin){\n        super(scene,x,y,textrue);\n        scene.add.existing(this)\n        scene.sys.updateList.add(this);\n        scene.sys.displayList.add(this);\n        scene.physics.add.existing(this)\n        this.setOrigin(0,0)\n        scene.physics.world.enableBody(this)\n        this.setCollideWorldBounds(true)\n        this.setScale(.7)\n        this.setSize(35,32).setOffset(15,30)\n        this.keyboard = keyboard;\n        this.health = 100\n        this.direction = 0\n        this.spellManager = new SpellManager(this.scene);\n        this.keyboard.addKeys('W,A,S,D,ONE,TWO,THREE');\n        this.currentSpell = 0;\n        this.create()\n    }\n    preload(){\n    }\n    create(){\n        \n        this.anims.create({\n            key:\"up\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:1,\n                end:8\n            }),\n            repeat: -1\n            \n        });\n        this.anims.create({\n            key:\"idle-up\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:0,\n                end:0\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"left\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:10,\n                end:17\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"idle-left\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:9,\n                end:9\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"down\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:19,\n                end:26\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"idle-down\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:18,\n                end:18\n            }),\n            repeat: -1\n        });    \n        this.anims.create({\n            key:\"right\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:27,\n                end:37\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"idle-right\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:27,\n                end:27\n            }),\n            repeat: -1\n        });\n        this.scene.input.on('pointerdown',(pointer:any) =>{\n            this.Casting()\n        },this.scene)\n\n\n        this.keyboard.on('keydown-ONE',()=>{\n            this.currentSpell = 0\n            console.log(\"spell 1\")\n\n        })\n        this.keyboard.on('keydown-TWO',()=>{\n            this.currentSpell = 1\n            console.log(\"spell 2\")\n\n        })\n        this.keyboard.on('keydown-THREE',()=>{\n            this.currentSpell = 2\n            console.log(\"spell 3\")\n        })\n        this.keyboard.on('keydown-W',() =>{\n            this.setVelocityY(-250)\n            this.direction = 0\n        })\n        this.keyboard.on('keydown-D',()=>{\n            this.setVelocityX(250)\n            this.direction = 1\n        },this)\n        this.keyboard.on('keydown-S',()=>{\n            this.setVelocityY(250)\n            this.direction = 2\n        })\n        this.keyboard.on('keydown-A',() =>{\n            this.setVelocityX(-250)\n            this.direction = 3\n        },this)\n\n        this.keyboard.on('keyup-A',()=>{\n            this.setVelocityX(0)\n            this.play('idle-left',true)\n\n        },this)\n\n        this.keyboard.on('keyup-D',()=>{\n            this.setVelocityX(0)\n            this.play('idle-right',true)\n\n        },this)\n        this.keyboard.on('keyup-W',()=>{\n            this.setVelocityY(0)\n            this.play('idle-up',true)\n        },this)\n\n        this.keyboard.on('keyup-S',()=>{\n            this.setVelocityY(0)\n            this.play('idle-down',true)\n\n        },this)\n    }\n    update(){\n        this.Movement()\n        this.ChangeSpell()\n        this.spellManager.update()\n        if(this.health == 0){\n            this.scene.scene.restart()\n        }\n    }\n    ChangeSpell(){\n       \n    }\n    Casting(){\n        this.spellManager.CreateNewSpell(this.currentSpell,this.body.x + this.body.width / 2,this.body.y + this.body.height / 2,this.direction)\n    }\n    Movement() {\n        this.body.velocity.normalize().scale(100)\n        if(this.body.velocity.x > 0 || this.body.velocity.x < 0 ||\n                this.body.velocity.y > 0 || this.body.velocity.y < 0)\n        {\n            if(this.body.velocity.x > 0)\n            {\n                if(this.body.velocity.y > 0)\n                    this.play(\"down\",true)\n                else\n                    this.play(\"right\",true)\n            }\n            else if(this.body.velocity.x < 0){\n                if(this.body.velocity.y > 0)\n                    this.play(\"down\",true)\n                else\n                    this.play(\"left\",true)\n            }\n            else{\n                if(this.body.velocity.y > 0)\n                    this.play(\"down\",true)\n                else if(this.body.velocity.y < 0)\n                    this.play(\"up\",true)\n            }\n            \n          /*  if(this.body.velocity.y < 0){\n                console.log(\"sad\")                \n                this.play(\"up\",true);\n            }\n            else if(this.body.velocity.y > 0){\n                this.play(\"down\",true)\n            }*/\n        }\n        \n    }\n    GetBody(){\n        return this.body\n    }\n    \n}\n\n\n","import { PlayScene } from \"../../scenes/PlayScene\"\nimport { Player } from \"../playerComponents/Player\"\n\nexport default class Walker extends Phaser.Physics.Arcade.Sprite{\n    player:Player\n    private readonly STATES = [\n        \"IDLE\",\n        \"CHASE\"\n    ]\n    constructor(scene:Phaser.Scene, x:number,y:number, texture:string,player:Player){\n        super(scene,x,y,texture)\n        this.scene = scene\n        scene.add.existing(this)\n        scene.physics.add.existing(this)\n        this.addToUpdateList()\n        this.addToDisplayList()\n        this.player = player\n        this.play(\"down\")\n    }\n\n    update(){\n        let playerBody = this.player.GetBody()\n        if(Phaser.Math.Distance.BetweenPoints(this.body,playerBody) < 300){\n            this.scene.physics.moveToObject(this,playerBody,50)\n        }else{\n            this.scene.physics.moveToObject(this,playerBody,0)\n        }\n        if(Phaser.Math.Distance.BetweenPoints(this.body,playerBody) < 25){\n            this.player.health -= 1\n        }\n    }\n}","import { Container } from \"./Container\";\nimport {TreeNode} from \"./TreeNode\"\nexport class BinaryTree{\n    root:TreeNode\n    constructor(root:TreeNode){\n        this.root = root\n    }\n    preOrder(rooms:Container[]) {\n        \n        let current = this.root;\n      \n        let traverse = (node:TreeNode) => {\n          if(node.left == undefined && node.right == undefined){\n              rooms.push(node.container)\n          }\n          if (node.left) traverse(node.left);\n          if (node.right) traverse(node.right);\n        };\n      \n        traverse(current);\n      }\n}\n\n","class Point{\n    x:number\n    y:number\n    constructor(x:number,y:number){\n        this.x = x\n        this.y = y\n    }\n}\nexport {Point}","import {Point} from \"./Point\"\nclass Container{\n    x:number\n    y:number\n    w:number\n    h:number\n    center:Point\n    constructor(x:number,y:number,w:number,h:number){\n        this.x = x\n        this.y = y\n        this.w = w\n        this.h = h\n        this.center = new Point(Math.floor(this.x + (this.w/2)),Math.floor(this.y + (this.h/2)))\n    }\n}\n\nexport {Container}","import { Container } from \"./Container\";\n\nclass TreeNode{\n    container: Container;\n    left?:TreeNode\n    right?:TreeNode\n    constructor(container:Container){\n        this.container = container\n        this.left = this.right = undefined\n    }\n}\n\nexport {TreeNode}","// First Create world X,Y Tiles \n// Pick Random Point and Axis to split on \n// On That Axis and point SPlit\n// Store Partitions\n// On each Partition Pick Random Point and Axis to split on \nimport { Renderer } from \"phaser\"\nimport {BinaryTree} from \"./BSP/BinaryTree\"\nimport { Container } from \"./BSP/Container\"\nimport { TreeNode } from \"./BSP/TreeNode\"\nexport default class BSP{\n    readonly GROUND = 300\n    readonly WALL = 510\n    readonly minSize = 6\n    readonly HEIGHT = 80\n    readonly WIDTH = 80\n    width:number = 50\n    height:number = 50\n    roomCount:number\n    world:any\n    leafs:any[]\n    constructor(){\n        this.width = this.WIDTH\n        this.height = this.HEIGHT\n        this.roomCount = 0\n        this.world = 0\n        this.leafs = []\n    }\n    BSPController(){\n        let rootContainer = new Container(0,0,this.width,this.height)\n        let rooms:Container[] = []\n        let root = this.SplitDirection(rootContainer,3)\n        let tree = new BinaryTree(root)\n        tree.preOrder(rooms)\n        this.world = this.CreateWorld(this.width,this.height)\n        rooms.forEach(room =>{\n            let roomPos = (room.y * this.width) + room.x\n            for(let i = 0; i < room.w; i++){\n                this.world[roomPos + i] = this.GROUND\n                this.world[(roomPos + i) + (this.width * (room.h - 1))] = this.GROUND\n                for(let j = 0; j < room.h; j++){\n                    let index = roomPos + (this.width * j)\n                    this.world[index] = this.GROUND\n                    this.world[index + room.w - 1] = this.GROUND\n                }\n            }\n        })\n        this.leafs = rooms\n        this.PostOrderTraversal(tree.root)\n        let cWorld:any = []\n        while(this.world.length){\n            cWorld.push(this.world.splice(0,this.width))\n        }\n        return cWorld\n    }\n\n    PostOrderTraversal(node:TreeNode){\n        if(node != undefined){\n            this.PostOrderTraversal(node.left)\n            this.PostOrderTraversal(node.right)\n            if(node.left != undefined && node.right != undefined){\n                this.ConnectContainers(node.left,node.right)\n            }\n        }\n    }\n    ConnectContainers(nodeLeft:TreeNode,nodeRight:TreeNode){\n        if (nodeLeft.container.center.x < nodeRight.container.center.x){\n            for(let x = nodeLeft?.container.center.x; x <= nodeRight.container.center.x; x++){\n                let xPos =  nodeLeft.container.center.y * this.width + x\n                let xPosPad =  (nodeLeft.container.center.y + 1) * this.width + x\n                this.world[xPos] = this.WALL\n                this.world[xPosPad] = this.WALL\n\n            }\n        }\n        if(nodeLeft.container.center.y < nodeRight.container.center.y){\n            for(let y = nodeLeft?.container.center.y; y <= nodeRight.container.center.y; y++){\n                let yPos =  y * this.width + nodeLeft.container.center.x\n                let yPosPad =  y * this.width + nodeLeft.container.center.x + 1\n\n                this.world[yPos] = this.WALL\n                this.world[yPosPad] = this.WALL\n\n            }\n        }\n    }\n    GetXY(x:number,y:number){\n        let xPos =  y * this.width + x\n\n        return xPos\n    }\n    SplitDirection(container:Container,iterations:number){\n        let node = new TreeNode(container)\n        if(iterations != 0){\n            let rand = Math.floor((Math.random() * 100) + 0)\n            if( rand % 2 == 0){\n                let splits = this.WorldCopyX(container)\n                node.left = this.SplitDirection(splits[0],iterations-1)\n                node.right = this.SplitDirection(splits[1],iterations-1)\n\n            }\n            else{\n                let splits = this.WorldCopyY(container)\n                node.left = this.SplitDirection(splits[0],iterations-1)\n                node.right = this.SplitDirection(splits[1],iterations-1)\n\n            }\n        }\n\n        return node\n    }\n    WorldCopyX(container:Container){\n        let min = Math.floor(container.w * 0.40);\n        let max = Math.floor(container.w * 0.70); \n        let splitOn:number = Math.floor(Math.random() * (max - min) + min);\n        let remainder = (container.w - splitOn)\n        let containerL = new Container(container.x,container.y,container.w - remainder, container.h)\n        let containerR = new Container(container.x + splitOn,container.y,container.w  - splitOn, container.h)\n        if(containerL.w < this.minSize || containerR.w < this.minSize){\n            return this.WorldCopyX(container)\n        }else{\n            return [containerL,containerR]\n        }\n        \n\n    }\n    WorldCopyY(container:Container){\n        let min = Math.floor(container.h * 0.30);\n        let max = Math.floor(container.h * 0.70); \n        let splitOn:number = Math.floor(Math.random() * (max - min) + min);\n        let remainder = (container.h - splitOn)\n        let containerL = new Container(container.x,container.y,container.w,  container.h - remainder)\n        let containerR = new Container(container.x,container.y + splitOn ,container.w , container.h - splitOn )\n        if(containerL.h < this.minSize || containerR.h < this.minSize){\n            return this.WorldCopyY(container)\n        }else{\n            return [containerL,containerR]\n        }\n    }\n  \n\n    CreateWorld(width:number,height:number){\n        var level:number[] = [];\n        for(let i = 0; i < width; i++){\n            for(let j = 0; j < height; j++){\n                level.push(this.GROUND)\n            }\n        }   \n        return level\n    }\n\n}","import { Player } from \"../playerComponents/Player\"\n\nexport default class Exit extends Phaser.Physics.Arcade.Sprite{\n    player:Player\n\n    constructor(scene:Phaser.Scene, x:number,y:number, texture:string,player:Player){\n        super(scene,x,y,texture)\n        this.scene = scene\n        scene.add.existing(this)\n        scene.physics.add.existing(this)\n        this.addToUpdateList()\n        this.addToDisplayList()\n        this.player = player\n    }\n\n    update(){\n        let playerBody = this.player.GetBody()\n        if(Phaser.Math.Distance.BetweenPoints(this.body.center,playerBody.center) <= 25){\n            this.scene.scene.restart()\n        }\n    }\n}","import {CST} from\"../CST\"\nimport { Player } from \"../components/playerComponents/Player\";\nimport Walker from \"../components/NPC/walker\"\nimport MapGenerator from \"../MapGenerator\"\nimport BSP from \"../BSP\";\nimport Exit from \"../components/exit/exit\";\nexport class PlayScene extends Phaser.Scene{\n    readonly WALL = 510\n    readonly tileSize = 16\n    mage!:Player\n    testEnemy!:Walker\n    exit!:Exit\n    healthText!:any\n    constructor(){\n        super({\n            key:CST.SCENES.PLAY\n        })\n    }\n\n    preload(){\n        this.load.image(\"terrain\",\"./assets/terrain.png\")\n        this.load.tilemapTiledJSON(\"map\",\"./assets/map.json\")\n    }\n    create(){\n        let bsp = new BSP();\n        let world = bsp.BSPController();\n\n        var map = this.make.tilemap({ data: world, tileWidth: this.tileSize, tileHeight: this.tileSize });\n        var tiles = map.addTilesetImage('terrain');\n        var layer = map.createLayer(0, tiles, 0, 0);\n        layer.setCollision(this.WALL,true);\n        let terrain = map.addTilesetImage(\"terrain\",\"terrain\");\n        this.physics.world.setBounds(0,0,map.widthInPixels,map.heightInPixels)\n        let keyboard = this.input.keyboard\n        this.mage = new Player(this,map.width,map.height,\"Mage\",keyboard)\n        this.cameras.main.setSize(800,600);\n        this.cameras.main.startFollow(this.mage)\n        this.cameras.main.setBounds(0,0,80 * this.tileSize,this.tileSize * 80)\n        this.physics.add.collider(this.mage,layer)\n        let rooms = bsp.leafs\n        let exitRoom =  Math.floor((Math.random() * rooms.length) + 0)\n        console.log(rooms[exitRoom])\n        console.log(rooms[exitRoom][\"center\"].x,rooms[exitRoom][\"center\"].y)\n        let xPos = rooms[exitRoom][\"center\"].x * this.tileSize\n        let yPos = rooms[exitRoom][\"center\"].y * this.tileSize\n        this.exit = new Exit(this,xPos,yPos,\"Mage\",this.mage)\n        this.healthText = this.add.text(16, 16, `Health: ${this.mage.health}`, { fontSize: '32px' ,color:\"#ffffff\"});\n        this.healthText.setScrollFactor(0)\n        this.testEnemy = new Walker(this,150,150,\"enemy\",this.mage)\n        this.physics.add.collider(this.testEnemy,layer)\n\n    }\n    update(time:number,delta:number){\n      this.mage.update()\n      this.testEnemy.update()\n      this.exit.update()\n        this.healthText.setText(`Health: ${this.mage.health}`)\n    }\n}      ","/** @type {import(\"../typings/phaser\")} */\nimport { LoadScene } from \"./scenes/LoadScene\";\nimport { MenuScene } from \"./scenes/MenuScene\";\nimport { PlayScene } from \"./scenes/PlayScene\";\n\n \n\nlet game = new Phaser.Game({\n    width:800,\n    height:600,\n    scene:[LoadScene,MenuScene,PlayScene],\n    render:{\n        pixelArt:true\n    },\n    physics:{\n        default:\"arcade\",\n        arcade:{\n            debug:true\n        }\n    }\n})"]}