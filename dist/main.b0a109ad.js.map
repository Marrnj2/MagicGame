{"version":3,"sources":["src/CST.ts","src/scenes/LoadScene.ts","src/scenes/MenuScene.ts","src/components/playerComponents/spells/spell.ts","src/components/playerComponents/spells/basicspell.ts","src/components/playerComponents/spellbook/SpellManager.ts","src/components/playerComponents/Player.ts","src/components/NPC/walker.ts","src/BSP/BinaryTree.ts","src/BSP/Point.ts","src/BSP/Container.ts","src/BSP/TreeNode.ts","src/BSP.ts","src/components/exit/exit.ts","src/scenes/PlayScene.ts","src/main.ts"],"names":[],"mappings":";;;;;AeAA;AHMA,AZNa,IYMb,GZNa,CAAA,GAAA,GAAK,EYMlB,GAAA,OAAA,CAAA,kBAAA,CAAA;AJJA,AEFA,ADAA,AEEA,AXDI,AeAJ,EfAI,EQCJ,AEFA,ADAA,AEEA,AIDA,IfAU,CSDV,CTCW,CUDX,CCEA,EHAA,AEFA,CKCA,GAAA,GLDA,CAAA,GKCA,CAAA,KLDA,CAAA,cKCA,CAAA;AHMA,AJLA,ACFA,AEEA,AXAQ,IYKR,AZLQ,IAAI,EAAC,KYKb,CZNW,EYMX,OAAA,CAAA,iBAAA,CAAA;AJLA,AEDA,ADDA,AEEA,AXCQ,AeDR,ILDA,AVEQ,AeDR,IfCY,EAAC,EQDb,ACFA,AEEA,CDDA,EKCA,CfDW,EeCX,OAAA,CAAA,oBAAA,CAAA;AHMA,AJJI,AEHJ,ADEI,AEGA,AXFI,IYIR,AZJQ,IAAI,EAAC,CQAT,ACDA,AEGA,GCEJ,EHLI,CGKJ,AHLgB,CAAZ,CEGA,CFHqB,AEGT,CHFZ,ACDA,CDCY,CCDiB,CGKjC,CAAA,CJJI,EAAyB,CGEzB,EAA+B,UCEnC,CAAA;AJHQ,AEJR,ADGQ,AEGA,AXNG,AeEX,GfHkB,CeGlB,KPEa,ACDA,AEGA,CFHL,ECHR,CFIQ,ACDS,CAAT,CMDR,CPEoB,EGEZ,AIJR,EPEQ,CGEiB,IIJzB,CAAA,IJIQ,gBIJR,CAAA;AHMA,AJHK,AECD,ADFI,AEGA,AXFJ,EAAA,EYGJ,GAAA,EHJa,AEGA,CFHL,CCEJ,EDFa,AEGT,CFHA,CTCS,CWEG,CXFF,GUCd,CAAY,ACCS,CDDrB,EAAqB,CAArB,CCCgB,CDDc,CAA9B,CCC6B,CDDU,CAAvC,EAA+C,KCC3C;ACCR,AFDQ,ADFH,AEGA,AXFG,AeAR,IfAQ,AeAJ,IAAI,CLCK,AVDA,CUCL,CVDM,AeAH,CfDO,CUED,CAAT,CKDO,MAAM,CAAC,IAAX,CAAgB;AHE3B,AJFI,AEEI,AVDA,AeAJ,EPDA,AOCA,EfAI,GeAC,CfAG,CUCC,AKDH,CLCF,AVDK,CAFK,CYGlB,AJFI,AOAuB,CPAvB,AEEa,CAAT,QFFJ,CAAA,QAAA,GAAA,UAAS,KAAT,EAA0B;AIa1B,AJXI,AECA,ADHR,AEGA,AXDQ,AeAJ,EAAA,EfAI,IQAI,AOAF,CLCG,ADHb,AEGA,AXDa,CUCL,AKDG,CHWP,AZXU,CAHI,CUID,AKHU,CHavB,AFVI,ADHR,CDEmB,EIWf,ADVJ,CHDsB,KAAK,IAAnB;AICK,AFCL,ADXR,AEEA,AXQQ,AeAJ,CNVJ,AEEA,CIQI,CNVJ,AEEA,CXQQ,GeAC,CfAG,CYAC,AFCA,AKDH,CLCF,AVDK,AeAF,GLCM,CAAT,CEDK,GAAS,GAAT,AGAF,CAAA,SAAD,EAAW,WAAA,CAAA,SAAX,EAAqB,WAAA,CAAA,SAArB,CAHiB;AHId,AJAL,AECA,AVNU,AeKd,EAAA,MPAQ,AOAF,CHAG,AFCA,CKDF,GHAE,EFCL,CEDY,AJAA,EECE,CEDT,AJAU,GECG,MFDd,CECc,CAAA,KAAJ,CFDC,AECS,CFDR,GECY,CFDb,AECc,EFDA,GECL,CAAW,KAAK,CAAL,GAAU,KAAK,CAAL,GAAO,CAA5B,CAAV,EAA0C,IAAI,CAAC,KAAL,CAAW,KAAK,CAAL,GAAU,KAAK,CAAL,GAAO,CAA5B,CAA1C,CAAd;AEAK,AJAH,AECL,ADLG,AEIA,AXZU,AeYV,CfZK,GeYL,GNJA,AEIA,CFJA,AEIA,CCAK,CJAA,EOAG,CNJR,CDIS,AOAA,CPAC,CIAL,AHJL,AEIA,GCAe,AJAV,AGAL,CCAK,CHJL,EDIkB,IGAlB,KHAK,IAA0B,IAAI,CAAC,KAAL,IAAc,SAA3C,EAAqD;AIClD,AJAC,AOFH,GAJgB,KPMb,CIAD,IJAM,CAAC,CIAP,GAAS,AJAR,CAAW,CIAZ,GJAgB,CAAC,SAAhB;AICD,AJAF,AEAX,AKAI,EAAA,OHAS,AFAb,AKAW,EAAC,GHAC,GAAQ,CFArB,CEAa;AAOL,AFpBR,AKcQ,CLdR,EAAA,CKcQ,KHMK,EGNE,EAAC,CHMR,GAAa,IGPT,CHOc,KAAlB;AACA,AJPE,AOCF,IAAA,KHMK,CJPC,AOCA,EAAC,EPDG,CIOV,AJPW,GIOG,CJPZ,EAAe,EIOE,MAAnB,AJPyB,CAAC,IAAI,CAAC,IAAN,CAAR;AIQjB,AJPE,AEAF,AKCI,MAAA,CLDJ,CAAA,CEOK,CJPC,COCG,EAAC,CPDA,CAAC,EEAX,CEOA,EJPE,AEAF,CEOiB,CAAjB,AJPkB,OEAlB,CFA0B,CAAC,IAAI,CAAC,KAAN,CAAR;AIQlB,AJPC,AODM,KPLP,IIaK,KAAL,GAAa,CAAb;AACA,AGXI,SHWC,KAAL,GAAa,EAAb;AACH,AJPG,AOZmB,CAAhB,CAAX,EPYQ,QAAQ,CAAC,OAAD,CAAR;AACD,GAbH;AIoBA,EAAA,GAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AAAA,AJNJ,QIMI,CJNJ,IIMI,GAAA,GJNJ,CIMI;AJzBJ,CAAA,EAAA;AI0BQ,QAAI,aAAa,GAAG,IAAI,WAAA,CAAA,SAAJ,CAAc,CAAd,EAAgB,CAAhB,EAAkB,KAAK,KAAvB,EAA6B,KAAK,MAAlC,CAApB;AACA,AJ3BK,OAAA,CI2BD,AJ3BC,KI2BI,GAAe,EAAxB,AJ3BK,GAAA,UAAA;AI4BL,QAAI,IAAI,GAAG,KAAK,cAAL,CAAoB,aAApB,EAAkC,CAAlC,CAAX;AACA,AL5BR,AMDA,AVFA,IIGA,AMDA,AVFA,IS+BY,AC7BZ,CVFA,CIGA,EK4BgB,GAAG,IAAI,YAAA,CAAA,UAAJ,CAAe,IAAf,CAAX;AACA,AL7BR,AMDA,AVFA,AFAA,ACAA,IUgCQ,AXhCR,ACAA,IUgCY,CAAC,AXhCb,ACAA,GDAA,ACAA,KUgCQ,CAAc,CXhCtB,ACAA,CDAA,ACAA,GUgCQ,KXhCR,ACAA,CDAA,ACAA;AUiCQ,AL9BR,AMDA,AVFA,SSiCa,CL9Bb,AMDA,AVFA,ISiCQ,EL9BR,AMDA,AVFA,CSiCqB,CL9BrB,AMDA,AVFA,ISiC0B,WAAL,CAAiB,KAAK,KAAtB,EAA4B,KAAK,MAAjC,CAAb;AACA,AL/B4B,AMDF,AVFU,AFC5C,ACAA,EKEoC,AMDF,AVFU,ESkCpC,AXjCR,ACAA,KUiCa,CAAC,CL/BsB,AMDF,AVFU,CIGR,AMDF,AVFU,CFC5C,ACAA,GWCkC,CDgC1B,ATlCoC,CSkCtB,AL/Bc,AMDF,CVFU,CIGR,IMDF,CAAA,AVFU,CIGR,AJHQ,CIGR,CK+Bd,IAAA,EAAI;AACd,AXlCZ,ACAA,UUkCgB,OAAO,GAAI,IAAI,CAAC,CAAL,GAAS,KAAI,CAAC,KAAf,GAAwB,IAAI,CAAC,CAA3C;AL1BR,AMJA,AVeA,AFnBJ,ACAA,UDAA,ACAA,CKQI,AMJA,AVeA,IUfA,CAAY,AVeZ,AFnBJ,ACAA,CKQI,AJWY,CIXA,ANRhB,ACAA,GWII,CVeA,CIXA,AMJgC,CAAhC,AVe+B,CIXC,CAAhC,AMJyC,CAAzC,CNIyC,CAAzC,AMJmD,ENIA,AJWnD,EAA+C,GUf/C,ENIA,AMJkE,ENIA,AJWlE,EAA8D,EUf9D,ENIA,AMJ+E,ENIA,IJW/E,EAAgF,SAAhF,EAAgG;ASgBxF,AL3BR,AMJA,ARLJ,ADAA,ADoBI,AFnB2B,ACAA,EDAA,ACAA,EGD/B,ADAA,IGSI,AMJA,AVeA,GSgBY,ARpChB,AHC+B,ACAA,CDAA,ACAA,CKQ3B,AMJA,AVeA,CCpBJ,CQoCoB,CAAC,AL1Bb,AMJA,ARNR,AFqBQ,GSegB,APpCxB,COoCY,CXnCmB,ACAA,CUmCJ,AL1BnB,AMJA,AVeA,CSeoB,AL1BpB,AMJA,AVeA,AFpBuB,ACAA,GUmCA,CL1BvB,AMJA,AVeA,CIXA,AMJA,AVeA,CCrBR,AHC+B,ACAA,CUmCI,ARpCnC,AHC+B,ACAA,CUmCK,CAAxB,AL1BJ,AMJA,AVeA,ESe+B,AL1BzB,AMJA,ARNd,AFqBc,CSe0B,APpCxC,EOoCY,ARpCZ,CAAA,CQoC2C,AL1BnC,AMJA,AVeA,EIXY,AMJA,AVeA,CIXZ,AMJA,ARNR,CAAA,CEUsB,AMJA,CNId,AMJA,ENIgB,AMJA,ATNxB,CAAA,ADqBQ,CCrBR,CDqB4B,IIXpB,AMJA,GVeA,EIXwB,AMJA,AVeI,IIZhC,AMJA,ERLJ,CAAA,CAAA,EFqBQ,KAAuC,IAD3C;ASiBY,ANrChB,AQAA,IRAA,AQAA,IFqCgB,CErChB,GAAA,CFqCoB,CAAC,INrCrB,CMqCgB,AErChB,CFqC2B,AErC3B,CRAA,MMqCkC,CErClC,CAAA,CFqCqC,CAArB,IAA0B,CNrC1C,CAAA,GMqC8C,CAAC,GNrC/C,CMqCgB,ANrChB,0BAAA,CAAA,CAAA;AMsCgB,ALjCK,AMEb,ARJR,ADDA,ADDa,AFCT,ACAA,IKGiB,AMEb,ARJR,ADDA,ADDa,ISqCG,CLjCK,AMET,AVNC,CIIQ,AMER,AVNA,CFCT,ACAA,EUoCgB,CAAC,ARpCrB,CSKQ,AVNK,CIIQ,AFFrB,EQIqB,AVNA,CSqCL,ALjCc,CKiCF,ALhCpB,ANJJ,ACAA,CCDS,EUML,AZLJ,ACAA,GKG0B,CKiCK,CL/B3B,EK+B8B,CAAX,GAAiB,CLjCd,CAAT,GKiC2B,CAAC,KAAL,IAAc,IAAI,CAAC,CAAL,GAAS,CAAvB,CAA5B,IAA0D,KAAI,CAAC,IAA/D;AL3BR,AMHA,APNR,ADCA,ADDA,ADAa,AWDb,IPUQ,AMHA,APNR,AHAa,AWDb,KPUY,AMHC,AVNA,CISA,AMHC,APNd,AHAa,CFCL,ACAA,CYFR,CDOQ,CAAU,CNGV,AOVR,EbEQ,ACAA,CKQa,ANRb,ACAA,ECDK,EUML,AZLA,ACAA,AYFR,CPUQ,AMHmB,AVNoC,AFCvD,ACAA,AYFR,IbEQ,ACAA,CWKA,CZLM,ACAA,iCYFd,CAAA;AFsCgB,AL3BR,AMHA,APPR,ADCA,ADDA,ADCQ,AFCI,ACAA,IKQJ,AMHA,EZLI,ACAA,GKQC,AMHA,AVNH,AFCK,ACAA,CKQD,AMHA,ARNd,ADDA,ADCW,CAAD,AFCM,ACAA,EUmCI,AL3BZ,AJTK,CISK,AJTJ,CAAJ,CEAV,ADDA,ADA+D,AFE/C,ACAA,CUmCQ,AC9BhB,AZLQ,ACAA,CUmCS,AC9BH,ARNtB,ADDA,EHEgB,ACAA,CUmCY,AC9BpB,AZLY,ACAA,CUmCJ,AL3BR,AMHkB,CNGC,CK2BI,CAAC,EXnChB,ACAA,CUmCmB,AL3B3B,ANRmB,ACAA,EWKnB,CAA2B,CD8BI,CAAC,CAAxB,EAA2B,AC9BnC,CD8BoC,EAA5B,EAA+B;AAC3B,AL3BZ,ADXR,ADC0C,ADDF,ADEhC,AFDM,ACAA,AYDd,ETC0C,ADDF,EGWhC,AOXR,CbCQ,ACAA,IKUK,AJTH,CISI,ADXd,AHEW,AFCD,ACAA,CGFgC,ADDF,ADE9B,CEDgC,ADDF,AUAxC,CXEa,CSoCW,ATpCd,CAFqD,AWA/D,CRAA,CCWQ,CAAc,ADXtB,CMsC6B,EL3BrB,CK2BwB,AL3BN,AHXc,ECCE,ADDF,ECCE,GOqCH,CL3B/B,AHXgC,AUAxC,CPWmC,AHXK,AUAxC,CFsC2C,APrCD,CAAA,GEUlC,CK2BuC,CAAC,AEtChD,CAAA,IFsC2C,GAAa,CAApC,kBEtCpB,CAAA,CAAA;AFuCoB,AC/BZ,APRoB,AHGpB,AFCH,ACAA,EIJuB,EOQpB,KAAI,AVLF,CSoCU,AC/BP,AVLF,CGHiB,AHGlB,CGHkB,CHGf,CAAH,CSoCc,ATvCuC,CSuCtC,ENvCG,EAAA,CMuCR,CAAW,GC/BvB,CPRoB,CMuCR,ANvCQ,IMuCY,KAAI,CAAC,IAAzB;AACA,AL5BZ,AFTJ,ADEA,ADDI,AWFR,IPUQ,AOVR,KPUY,AJRF,AWFV,CFsCoB,AL5BP,AJRF,CEDP,ADEA,ADDQ,CAAF,AWFV,EXEc,CSoCU,ATpCd,CSoCe,KAAL,ARnChB,CQmC2B,ARnCf,CCFZ,CAAY,CESR,EK4B4B,ARnChC,AUHJ,CAAA,CTCI,ADE+B,CQmCI,CPrCL,GOqCS,CAAC,AEtC5C,CFsC+B,ARnC3B,AUHJ,EVGkD,CQmCF,CAA5B,IAAiC,AEtCrD,CVGI,AUHJ,CAAA,CVGiE,EQmCR,CAAC,CRnCtD,EAAyE,CQmCzD,QRnChB,EAAyF;AQoC5E,AChCT,APFJ,ADJA,ADEA,ADL2D,AFM3D,ACDA,EDCA,ACDA,EWII,CVTK,GEGT,ADEA,CSIQ,CAAC,CPFT,ALDA,ACDA,CDCA,ACDA,CGFA,ADEA,GCDI,ADEA,CECJ,CAAY,GLDZ,ACDA,CGDI,ADEA,AHAJ,ACDA,CIEA,ADHI,ADEA,EEC4B,COE5B,APFJ,CDHI,ADEA,CECqC,ADHrC,ADEA,AFDJ,CIEA,ALDA,EKCmD,AJFnD,CGDI,ADEA,AHAJ,EIFU,ADEA,IECV,CDHe,ADEX,CEEA,ADJY,CDEA,EFDhB,CDCA,GIFU,CCGV,ADHwB,ADEpB,EEE6C,AFFzB,GCFpB,EAA0B,EDE1B,EAA4B,CCF5B,GDEA,ECFgC,ADEC,ICHrC,KDGI,KAA2C,IAD/C;AQqCS,AL7BL,ADNJ,AHDS,AFCL,ACFJ,AYFJ,IPUQ,AJPK,AWHb,IRII,AJFA,CKQQ,AJPC,AFCA,CMMA,AJPA,AWHb,GRII,ALAI,ACFJ,AYFJ,CbIkB,EKEV,AJJJ,ECCS,CFCL,CAAgB,ACFpB,CCC4C,CGGxC,CAAA,GCIA,ANNA,CKEA,CAAA,ALFuB,AaJ/B,CAAA,GRMQ,EAAM,EQNd,CAAA,ERMQ,EAAY,CAAZ,EAAc,CAAd,EAAgB,OAAhB,ALFA,KKEwB,GQNhC,CRII,AQJJ,CAAA;AFwCS,ACjCD,ARLA,ADJK,ADML,AFCA,IYEA,ARLA,ADJK,CQ+BL,ICtBI,ARLA,ADJC,ADMH,AFCG,CYEA,ARLA,ADJA,EDKmC,CFExC,CAAU,CIHV,CQKA,ERLa,CQKC,AZFd,CAAgB,GIHhB,CDJK,CSSL,ETTsB,EAAjB,AHOL,EAA0B,oBAA1B;AWoCA,AL9BA,ADJA,AHFA,AFCA,ACHA,AYFR,IPUQ,ADJA,AQNR,IZEY,CUsCC,AL9BD,ADJC,AHFH,AFCG,CMKA,ADJC,GAAN,ALDA,AaLR,CFwCQ,ANlCU,ALDA,EMKV,CK8Ba,CVtCC,CKQA,ELRG,CUsCjB,ANlCA,CAAmB,ECInB,ANLA,CAAsB,ACHA,EIItB,CJJiB,CAAS,GDG1B,EAA8B,ACHb,CAAe,KAAK,IAAL,CAAU,QDG1C,ACHgC,CAAmB,CDGD,ICHlB,GAA2B,CAA1C,EAA6C,KAAK,IAAL,CAAU,QAAV,CAAmB,MAAnB,GAA4B,IAAzE,EAA8E,MAA9E,CAAjB;AUuCA,AClCH,APAG,ADFH,ADFG,ADDwC,AFIpC,ACHJ,AYHR,IROQ,AJJA,CCDK,CFID,EGHD,CQsCE,ANlCA,CAAC,GAAN,AFJO,CEIG,AFJF,AFAE,CAAC,CDGG,EAAC,EADmC,IKElD,CAAqB,AFJlB,EQsCH,CAAwB,ANlCxB,AFJsB,CEIG,AFJtB,AFAH,GUsC4B,CAAC,CNlC7B,AFJ4B,CAA5B,EQsCA,ARtC8B;AQuC9B,AL/BA,ADHA,AFJI,ADYJ,AFTI,ACHJ,AYJR,IPWQ,ADHA,AHQA,ECZI,AHGA,EWmCA,CL/BA,ADHC,AHQD,ADZC,CKOA,ADHC,AHQD,AWhBb,CVIgB,CAAC,CEIT,CMkCU,AL/BV,ADHU,AJJV,CKOU,ALPC,CYJnB,CF0CyB,ARtCb,AHGW,CaPvB,CF0CQ,AXnCgB,CGHC,ADYjB,ADZA,CKOA,AHPkB,AFAD,EEAA,ADYC,EGRlB,CAAsB,AFJC,AFAN,CAAA,EIIjB,CAA0B,AJJT,CEAU,AFAN,CEAO,CDY5B,EGRA,EJJiB,CAAW,IEAL,AFAvB,CEAuC,KAAI,CAAC,WAArB,EAAkC,CAAlC,CAAnB;ASKR,APAI,ADHJ,ADDQ,ADYJ,AFZkD,ACClD,AYNuB,EDS3B,ARHA,ASN2B,ERSvB,AHQA,ADXA,CDDA,CYIJ,ATJQ,CSIR,EPAS,AHQD,CGRE,AHQD,CCZG,AULe,CVKd,AULc,ETM3B,AHAc,CGAd,AFWI,ADXW,CWGf,CAAA,APAI,AJHA,CIGc,AHQD,ADXC,CEDV,EEIJ,AQTuB,CRSL,AFJC,CSIvB,AVQI,AWjBuB,CTM3B,ADDQ,CCCR,CQGA,GXHI,AYNuB,CRSvB,AQTuB,CRSI,AJHD,KIG1B,EOAJ,CRHA,GAAA,CHA8B,SGAf,KAAf,EAA4B,CAA5B,EAAqC,CAArC,EAA8C,SAA9C,EAA8D;AOqC1D,ACjCA,ARHA,ADDI,ADYJ,AFTA,ACFI,ICWJ,ECZI,AFCA,EWGA,ARHA,CFWA,AFTC,CESA,CSyBC,ARrCE,AFCA,CEDC,AFCA,CDET,CAAU,EWkCC,CPpCE,AFWb,ADXI,CWGU,AXHC,CEDX,CCCY,AFWD,CSyBT,ACjCW,ARFb,COmCa,ARrCE,CFCf,CEDA,AFCiB,CGCb,AJCR,CYCsB,AZDA,CEStB,CSyBA,CVpCqB,CUoCG,AVpCH,EWGJ,AZDjB,CYC6B,AXHR,CDEQ,ACFJ,GGCjB,CAAA,EQES,AXHI,CAAW,CWGhC,GRFI,AHDA,CGCe,KAAK,EJCxB,EAAiD,CID7C,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,UAA9B,EAAyC,CAAzC,CADY,EAEZ,IAAI,YAAA,CAAA,OAAJ,CAAe,KAAK,KAApB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,SAA9B,EAAwC,CAAxC,CAFY,EAGZ,IAAI,YAAA,CAAA,OAAJ,CAAe,KAAK,KAApB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,WAA9B,EAA0C,CAA1C,CAHY,CAAhB;AOqCI,ALhCP,ADFG,ADEA,ADLC,ADYD,AFTI,ACFH,AYDL,IRGI,AHSA,CChBA,AFGA,CUsCI,AXlCA,EIEA,CCFA,AHSA,CGTC,AHSA,CCZA,AUAT,CFqCc,CAAC,APhCF,GAAG,AJFE,CWkCV,ATzBJ,CSyBgB,AXlCD,CKAf,CAAe,AHSA,AFVkC,AaFrD,CRGI,EMkCqB,ANlCJ,AQHrB,CRGI,CDEqB,CAAC,CFOtB,CSyBgB,CAAW,EPhCN,CAArB,GOgCgB,CAAkB,CAAlB,EAAoB,KAAK,KAAzB,CAAZ;AACH,AClCD,AREI,ADLA,ADYJ,AFTI,ACFP,AYFD,GZNA,CGYQ,AFOJ,ECZI,AHGA,EYAD,ACJP,CTMa,AFOL,CEPM,AFOL,CCZG,CAAC,CUDb,CDIa,AREL,CQFM,AREK,CAAX,ASLJ,CVAI,AHGW,CIEE,CQFd,AREC,AJFY,CYAD,ATHE,CCKE,AFOnB,CWZA,CAAA,CXYmB,CCZE,ADYrB,CCZsB,CUAtB,CDGG,ACHH,CDGwB,CREpB,ESLJ,EVAiB,AUAX,CVAyB,KAAI,CAAC,CSGjC,CAAmC,KAAK,IAAL,ATHrB,CSG+B,ATH5C,MSGD,EAAoD,UAAU,CAAC,MAA/D,KAA0E,EAA7E,EAAgF;ANGpF,AMFQ,APDJ,ADIH,ADNO,ADYJ,AFZiD,AaA7C,EPKR,CFRA,CCKI,AHUA,CFZA,CGAI,AUAA,EPKR,CAAA,ADHS,AHUA,AWZE,CRED,AHUA,CUTG,ATHD,AUAA,CVAC,CDYT,CAAU,EUTN,ACHI,CDGO,APDf,AQFQ,CPKZ,ADHkB,CCGlB,AHLQ,CUAI,CAAI,CDGR,ATHe,ADYnB,CUTqB,APDrB,AHUmB,CGVC,AFFhB,CGKR,EOLY,CPKZ,AJOI,AWZmB,EDGf,IPDJ,CAA+B,KCGnC,ADHI;AMmCA,AL/BA,AMFC,ATHG,ADYJ,AFTA,ACHR,AYFc,IXcN,CWdA,CVEI,EGKA,CJOC,AFTA,ACHb,CCYc,AWZJ,CFoCK,ARpCC,CAAC,CHGT,CAAU,AaNd,GFuCI,ATxBA,CIPc,AJOA,ADZtB,CEAY,EGKa,AJOjB,CCZmB,ADYD,ECZd,CHGJ,CMEsB,ANFA,IEStB,CAA2B,CIPV,CAAY,GJO7B,AFTA,EAAiC,EMEhB,EAAjB,wBNFA,EAA8D;AWkCjE,ACjCA,APFG,ADIJ,ADLK,AHGG,ACnBZ,CAAA,CGqBI,AHrB2B,CU0B3B,ACZA,CPGI,ELEI,ECnByB,CIiBzB,AJjB0B,CIiBzB,IDIT,AHrBJ,CGqBI,AHrBJ,CDmBsB,EAAC,EAD+C,IIGlE,CAAA,MCJI,ADIJ,CCJ+B,EDI/B,ECJI,UDIJ,CAEC,CAFD;AEAI,AJOA,AFRI,AadC,IXsBL,AWtBK,EbcD,EMCD,CJOC,AWtBC,CXsBA,AWtBA,IPeI,AOfJ,CPeK,ENDK,AadH,EPeT,ANDa,CMCD,AOfV,KXsBL,GIPG,CAAqB,aAArB,CAAmC,KAAK,IAAxC,EAA6C,UAA7C,IAA2D,GAA9D,EAAkE;AKiCtE,ALhCQ,AMFZ,APFQ,ADOJ,ADRI,AHC8D,AClBzD,AYOA,EF+CT,AP7BA,ECPI,AFDA,AUVK,CF+CT,AXpCI,CWoCJ,CVtDS,CAAA,CWoBb,APFY,AFDA,AUVC,CRWA,AFDA,AUVA,CPeI,EMFjB,CRKI,CO6BA,AP7BA,CO6BA,ALhCQ,CAAW,AHLf,AFjBK,CIkBL,AFDa,AUVR,CRWS,CJlBT,CIkBL,AQXgB,EVUC,AUVZ,CPeD,AFGR,ADRsB,CGKK,AFG3B,IHzBS,EGyBT,ADRI,EAA0B,CQqC9B,AP7BA,GO6BA,ALhCQ,CAAgC,AHLN,CAAC,GGK3B,EAAqC,EFG7C,ADRI,CQqCe,AP3BlB,CAFD,GO6BA,EAAgC,CLhCxB,EAAgD,EAAhD;AKiCJ,ALhCC,AMtBT,AV4BQ,AFPA,CYrBR,CAAkC,EV4B1B,CIRA,GKkCG,ACtD6B,CAAC,AV4B7B,AFPC,CEOA,CINA,CKgCE,CXjCP,CAAU,EWiCC,ACtDe,CAAe,MAAf,CAAsB,CDsDhD,AXjCA,CEOA,AFPsB,CWiCD,GCtD7B,CAAA,MZqBQ,EAAkC,wBAAlC,EAA2D;AWkCvD,ALhCA,ADLJ,ADSR,ADVQ,AHKI,AaPP,IRGG,AFDA,EHKI,GKJA,ADSZ,ADVY,CECC,AFDA,CQsCI,ALhCA,KAAL,ANDU,CMCC,ADLf,CAAa,AFDb,AHKe,CGLD,CECd,ALG2D,CIMnE,CCTwB,ECKZ,ADLJ,AFDkB,CGMK,AHNJ,CECC,GMqChB,CAAwB,ARtC5B,IQsCgC,CAAC,ANrCjC,CAA8B,CCK1B,CAAgC,ADLpC,CMqCI,CNrC6B,ECK7B,ADLJ,ECKyC,UAArC,EAAgD,CAAhD;AKiCA,ALhCH,AFvBT,AF4BQ,AFNI,CItBZ,CAA0C,EF4BlC,EFNI,EItBoC,CAAC,AF4BrC,CAAC,CS2BI,KPvDyB,AF4BlC,CE5BiD,AJsBlC,EEMD,AFNE,IItBkB,CAAsB,AF4BtC,CAAC,IS2Bf,APvDZ,COuDoC,APvDpC,AF4BsB,GAAa,CS2BK,CAAC,GT3BF,CAAC,CS2B5B,ST3BuB,CAAgB,KAAI,CAAC,WAArB,EAAkC,CAAlC,CAA3B;AGVA,AHWA,AFT2D,AaJ/D,EAAA,EREI,AHWA,CFTA,IKFI,AHWA,CGXC,AHWA,CWbT,CAAA,IXaI,EGXA,CHWc,EGXE,AQFpB,CAAA,EXasB,CAAC,IGXnB,AQFJ,CXakB,EWblB,CXa+B,KAAI,CAAC,KWbpC,KXa+B,CAAgB,KAAI,CAAC,WAArB,EAAkC,CAAlC,CAA3B;AS2BI,ALhCJ,ADLA,AFFH,AHOG,AaPA,IREA,ICKG,CDLC,ALKC,AaPA,CFuCE,ANrCF,GLKL,AaPA,CFuCW,ALhCF,ANAC,AaPA,CFuCE,ALhCF,CDLV,GMqCO,ALhCJ,ADLW,ALKd,AaPA,CPOe,ANAC,AaPA,EREhB,CMqCoB,KLhCjB,CAAqB,ANAxB,AaPA,EbO0B,AaPA,CFuCnB,IAA0B,IAAI,CAAC,CLhCnC,CAAmC,GKgCL,ELhCU,EKgCI,ELhC5C,CNAH,AaPA,CPOgD,KKgC5C,EAAqD,GLhCtD,IAA2D,EAA9D,EAAiE;AKiCzD,ALhCJ,ADLJ,AHUA,AFJH,AaRG,GbbJ,CKeI,AHUA,KGVI,AHUA,AWZC,CREA,AHUA,CILI,EKgCI,AEvCb,CXYA,AWZU,CXYA,EILN,CAAY,CDLhB,GAAiB,CAAjB,CCKI,CJKJ,GIL0B,CAAtB,CKgCI,AEvCR,CFuC+B,AEvCJ,IFuCQ,CAAC,AEvCpC,EAAiC,EFuCzB,EAAiC,IAAI,CAAC,KAAtC,KEvCR;AFwCK,ALhCJ,ADLD,AFHJ,AUCC,EVDD,CUFA,CRKI,KAAI,CAAC,EFHT,CAAA,SEGI,AFHJ,CAAA,EEGwB,IAAI,MFH5B,GAAA,KEG4B,CAAA,MFH5B,CEGwB,AFDvB,CECwC,AFHzC,KEG6C,CAAC,KAAtB,CAApB;AMsCC,ALhCJ,ANAD,EAAA,CMVA,QNUA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AWiCC,ANtCG,AFDJ,ADUC,AFHG,AaRJ,EVCA,AUDA,CFgCA,CN9BI,KAAI,ALMC,CKNA,CQFT,CVCA,AUDA,CVCA,CHOI,CAAW,GKNX,CAAc,ELMd,AaRJ,CVCA,AHOsB,AaRtB,CVCA,GECI,CAAsB,CQF1B,GVCA,AUDA,GVCA,SUDA,GVCA,IECI;ACMR,AHNQ,AHOI,AaRJ,MbQI,EGPA,AUDA,CPOZ,ANCe,EAAC,AaRD,GVCG,AUDA,CPOlB,AHNmB,GUDG,CVCV,CAAY,EHME,CaPJ,CAAA,IVCV,CAAqB,EUDf,EAAV,GVCI,CAA6B,KAAK,CAAlC,EAAoC,KAAK,CAAzC,EAA2C,KAAK,OAAhD,EAAwD,KAAK,OAA7D,IAAwE,GAA5E,EACA;AQsCJ,AL7DJ,ADuBQ,AFCI,ADQR,AFFQ,AaRJ,CPtBR,CK6DI,AL7DgC,AJgChC,EGTI,CMsCJ,CAAA,AX/BQ,CEER,CIhCsC,AJgCtC,AWVQ,CPtB+B,ADuB/B,CAAC,CFCI,EUFA,EFuCb,AX/BiB,CW+BjB,AL7DgC,AOsBhB,CPtB+B,AJgC/C,AFFkB,CEElB,CFJsB,AaNH,CVEX,AUFY,CVEG,CEDnB,CCvB4B,CAAsB,CDuB9B,CAApB,AFCI,CDQR,GIhCJ,AJgCI,CIhCJ,EK6DI,AEvCgB,EAAZ,CFuCJ,IT7BU,IAAV,ES6BkB,AT7BI,KAAtB,EAAkC,CS6BlC,EAAoC,SAApC,EAAsD;AAClD,ARrCI,ADQJ,AFFI,AaPJ,IXSA,EFFI,EW+BA,AEtCA,EXSJ,CCRS,ADQT,AWTO,CbOG,EAAC,AaPD,EFsCE,CAAC,EX/BG,AaPD,CXSf,CCRI,ADQE,CCRc,CUDV,CbOC,AaPS,CbOE,CW+BlB,CAAmB,ARrCnB,GDQJ,CAAe,AWTL,CAAkB,CFsCxB,CAA0B,CAA1B,AT7BJ,CAAe,ES6BmB,ET7BlC,EAAgB,CFFL,CAA8B,EEEzC,CS6B2C,CAAC,AT7BvB,KAArB,EFFW,EW+BuB,AX/BmB,CW+BC,MAApB,CAA2B,CAA7D,EAA+D;AAC3D,ANvCJ,AFEC,AHMO,AaRsB,IRA9B,EQA8B,EbQtB,CKRJ,CAAC,AQA6B,CFuC1B,CEvC4B,CbQvB,EW+BD,AX/BE,CW+BD,ANvCb,ALOqD,CaPzB,EFuCZ,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,SAAV,CAAoB,MAApB,CAA2B,CAAvC,EAA0C,CAAC,IAAI,SAAS,CAAC,SAAV,CAAoB,MAApB,CAA2B,CAA1E,EAA6E,CAAC,EAA9E,EAAiF;AAC7E,ARrCX,ADOG,AFDQ,AaTmC,GVH/C,GUG+C,EbSnC,CECH,EFDM,CW+BC,CX/BA,EaTwC,CFwCpC,CExCsC,EFwClC,CT9BpB,CAAiB,CWV0C,IXUrC,CS8BM,CAAC,EExCD,EXU5B,EAA6B,GS8BT,CAAmB,CT9BL,KS8Bd,CAA0B,AT9B9C,CS8BoB,GAA8B,KAAK,KAAnC,GAA2C,CAAvD;AACA,AT9BX,AFJwD,AaPgB,GXQzE,GWRyE,CbO1D,CAHO,IWqCN,IEzCmE,EAAE,CFyC9D,GAAI,CAAC,AEzC8D,QFyCtD,CAAC,SAAT,CAAmB,MAAnB,CAA0B,CAA1B,GAA8B,CAA/B,IAAoC,KAAK,KAAzC,GAAiD,CAAhE;AACA,ANzCX,AFGL,AHOY,AaXwB,KAAlB,CbWN,AaXJ,GVIR,GHOkB,CW+BG,CX/BD,CAAC,GW+BL,CAAW,ARtC3B,IQsCgB,IAAmB,KAAK,MAAxB;AACA,ARpEhB,ADqCI,AFRsB,AaHlB,CV1BR,CAAwC,ADqCpC,GFRI,EEQJ,CAAA,AWXQ,CV1B4B,CAAA,GQoEnB,AE1CJ,GAAG,CV1BpB,ADqCI,CS+BY,ARpEhB,ADqCI,CS+BuB,AE1CJ,CAAC,EXWpB,GAAA,CS+BY,IAAsB,KAAK,AT/BlC,AWXW,CXWhB,AWXoC,EXWtB,CAAd,ES+BY,AT/BW,IWXP,CAAZ,IXWJ,EAAuC;ASiC9B,AN3CT,AHWI,AFAA,AaXA,ERAJ,MAAA,AQAQ,CRAR,AHWS,AFAA,IaXI,CbWT,CAAW,CaXC,ERAhB,CAAA,AQAmB,CXWf,AWXgB,CbWhB,CAAkB,CEAC,GGXvB,GAAA,EQAgB,CXWZ,AWX4B,CAAhB,EAAmB,KAAnB,CRAhB,CACC,AQDyC,CRA1C,AQAgB,EAA6B,CAA7B,CAAZ;AF4CC,AThCD,AFAI,AaXJ,IAAA,EbWI,GEAC,AFAE,AaXF,CAAC,CbWE,IEAR,GAAc,GFDI,CaVlB,CXWmB,AWXA,KXWL,AWXU,GXWG,CWX3B,EAA6B,EXWG,EWXhC,QXW2B,CAAgB,KAAK,WAArB,EAAkC,CAAlC,CAA3B;AGVJ,AHWI,AFAI,AaXJ,ERAJ,ILWQ,EKXR,AQAQ,CRAR,AHWS,MAAL,AFAa,AaXF,EbWG,CKXlB,AHWkB,AWXA,CRAlB,ALSsB,EaTD,CAAC,CXWC,EGXvB,GAAA,AHWkB,GAAa,KAAK,CWXlB,CAAoB,ERAtC,MHW+B,CAAgB,AWX7B,EAA8B,GXWI,MWXlC,CAAd,IXW2B,EAAkC,CAAlC,CAA3B;ASgCA,AN3CJ,AHYI,AFAI,AaXJ,MbWI,EW+BD,AN3CP,CHYS,AWXA,GbWK,CKZd,AHYI,CAAU,AFAC,EW+BA,AN3Cf,AQCI,CF0CY,AE1CC,EXWb,AFAgB,CKZpB,AHYoB,CAAhB,CWXA,CXWkB,AWXC,CXWnB,AFAW,CAAW,CW+BnB,CAAmB,KE1CtB,CF0CG,AE1C0B,CF0CA,AE1C7B,CF0CG,CE1C4B,CAA/B,CF0CiC,CE1CA,GAAG,CbWzB,AaX0B,CbWI,GW+BC,CAAC,MX/BhC,EAAyC,AaXpD,CF0CiC,CAAoB,AE1CF,GAAG,CAAC,EF0CtB,CAA2B,CAA5D,EAA8D,QE1C9D;AF2CI,AT/BJ,AFAQ,AaXR,QbWQ,AaXJ,CXWC,ES+BG,EX/BK,EW+BD,AX/BE,CW+BD,AXhCuC,AaVxC,EXWZ,CS+BgB,AT/BD,AWXA,IXWf,CWXoB,GF0CI,EE1CT,CAAW,EF0CF,IAAR,EE1ChB,EF0CgB,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,SAAV,CAAoB,MAApB,CAA2B,CAAvC,EAA0C,CAAC,IAAI,SAAS,CAAC,SAAV,CAAoB,MAApB,CAA2B,CAA1E,EAA6E,CAAC,EAA9E,EAAiF;AAC7E,AN3CR,AHYA,AFAQ,AaXR,QbWQ,CKZH,AHYA,AWXA,EbWM,CW+BC,CX/BA,AaXZ,CRDA,CAAW,CM2CK,AE1CJ,GF0CQ,AT/BpB,CS+BqB,AT/BL,AWXA,CRDhB,CAAkB,CM2CM,CT/BxB,IS+B6B,AE1Cb,CAAA,IF0CI,EE1CR,CF0CyB,AE1Cd,IAAX,EAAgB,EF0CiB,CAAC,AE1Cf,CAAC,KAApB,EAA0B,CF0CD,CAAmB,CE1Cf,CAAC,IF0CL,CAA0B,CAAvD,AE1CI,EAAqC,MAArC,EAA4C,QAA5C,CAAZ;AF2CQ,AN3CJ,AHYJ,AFHoD,AaRpD,MRDI,CLSO,CAHO,CKNX,AHYF,AWXA,ERDG,CM2CI,GN5CM,CQElB,CAAa,EF0CM,ET/BnB,AWXA,CF0CuB,AT/BL,AWXA,CF0CM,GAAG,CT/BJ,EWXvB,CAA0B,CF0CM,ET/BhC,AWXA,EAA8B,CF0CP,EE1CvB,CF0CwC,QAAQ,CAAC,SAAT,CAAmB,MAAnB,CAA0B,CAA3C,GAA+C,CAA9D;AAEA,AN5CJ,AHYJ,AFAI,AaXJ,MRDI,ALYA,GEAC,AWXA,GbWK,CWgCG,CXhCD,CKZC,ALYA,CaXb,CRDc,AQCD,CF2CL,AN9CU,CM8CC,EThCnB,AWXA,CXWkB,AWXA,CF2CV,IAAmB,AThCJ,KSgCS,CThChC,AWXA,CAA8B,IF2CtB,CE3C2B,IAAnC;AF4CQ,AN5CJ,ALIc,AaHlB,KbGA,CKJI,GQCC,GRDK,CM4CG,CN5CF,EQCX,CAAa,CF2CL,CAAW,AN5CH,EQChB,CAAkB,ERDP,CAAW,CM4Cd,IAAsB,CE3C9B,CAA4B,CAA5B,EF2CmC,AE3CL,CAA9B,EAAgC,GF2CxB,EN5CG,AQC0B,CRDI,IQCC,ERD/B,EAAqC,IQChD,EAAmD,KAAK,QAAL,GAAgB,EAAnE;AF6CK,AN7CG,AHWR,AFCA,AaXA,QRDQ,CLYH,AaXA,GXUE,CGXM,CLYb,CKZc,ALYH,CKbqC,AQEhD,CAAa,GbWb,AaXA,CXUA,AFCiB,AaXA,KbWA,CAAA,EaXjB,CbWiB,AaXS,CbWL,IaXU,EbWd,CAAW,CaX5B,EAAoC,CbWpC,IaXA;AF6CC,AN7CO,AHWJ,AFCJ,AaXA,QRDQ,AQCJ,CbWC,EKZM,AHWF,CAAL,CGXQ,AQCH,CbWT,CAAW,CaXC,GAAG,CAAC,CbWhB,CAAkB,GaXlB;AF6CH,ANhDmD,AHcxC,AFCJ,AaXJ,GFwBJ,GXbQ,CKfO,CAHO,AQOd,CbWG,EAAC,EEDK,GWVD,CbUM,EaVF,IAAI,CXUZ,AWVa,CXUI,CAAjB,GWVQ,CAAY,IAAI,CAAC,MAAL,KAAgB,KAAK,CAAC,MAAvB,GAAiC,CAA5C,CAAhB;ARAI,AHWI,AFCJ,AaXJ,IAAA,ERDI,ALYA,KaXG,CRDG,AQCF,ERDI,CAAC,ALYA,AaXb,CAAY,CbWE,CAFI,GaTD,CAAC,QAAD,CAAjB;AF4CJ,ANpDsB,ALoBd,AaXJ,EF2CJ,EE3CI,CF2CJ,ANpDI,CMoDJ,AXhCQ,KaXG,CbWG,AaXF,EbWG,CWgCf,AE3CI,CF2CJ,AE3CgB,GbWI,EWgCpB,AE3CqB,CAAC,EF2CtB,AXhCe,CAAW,KaXL,CAAL,CAAgB,EF2C1B,CAAN,EAAe,CAAf,EAAuB,AE3CP,EAA0B,CbW3B,AaXX,CbWyC,CaXD,KAAK,CbWlC,AaXmC,EbWG,MaXJ,CAAL,CAAgB,QAAhB,EAA0B,CAAlE;AF4CA,AN3CA,AHSI,AFEI,AaXR,QF2CI,AXhCI,AaXJ,CRAC,EHSI,CSkCD,ATlCJ,AWTI,CbWK,CKXb,CM2CY,AN3CD,ALWG,AaXH,CF2CE,AXjCoC,GWiCjC,CE3CA,CRAhB,AQAiB,CRAC,EM2CG,KAAT,AE3CI,CAAL,CAAgB,CF2CE,CAA7B,ME3CW,EAA0B,CAA1B,GAA8B,KAAK,QAA9C;AF6CA,AN5CI,AHSI,AFEA,AaXR,MRAI,ELWI,AaXJ,CRAG,EM4CA,AN5CC,ALWG,CaXH,CXSK,AFED,EWiCZ,AE5CW,KRDO,AQCF,CAAC,GXST,CAAiB,IWTT,CAAL,CXSH,AWTmB,QAAhB,EAA0B,CAA1B,GAA8B,KAAK,QAA9C;AF6CH,AN5CO,AHSI,AFDyC,AaRjD,GFwCJ,GNxCQ,CLQO,CAHO,CaLb,IAAL,ERAa,CQAD,CRAE,CAFI,EQEF,MAAA,CAAA,OAAJ,CAAS,IAAT,EAAc,IAAd,EAAmB,IAAnB,EAAwB,MAAxB,EAA+B,KAAK,IAApC,CAAZ;ARCI,ALWA,AaXJ,MRAI,ALWA,GaXC,GRAK,ALWA,EKXC,ALWC,CAAC,IKXG,AQAhB,GAAkB,ERAP,CAAW,EQAC,GAAL,CAAS,IAAT,CAAc,EAAd,EAAkB,EAAlB,CRAP,CAA8B,AQAD,MRA7B,EAAqC,KQAG,KAAK,IAAL,CAAU,MAA3C,EAAqD;AF4C3E,AN3CY,AHQJ,AFLc,AaJuD,EF4C7E,GAAA,AXxCI,CWwCJ,AE5C6E,ERCjE,GHQC,CAAL,CGRS,CQDoE,CF4CrF,AN3CkB,CM2ClB,AN5CoD,AQAmC,MAAZ,QF4C3E,GAAA,UAAe,SAAf,EAAmC,UAAnC,EAAoD;AAChD,AN3CQ,AHQA,AFGR,Aab2F,MAAA,EF6CvF,AN3CI,CLWH,EKXM,AQFqF,CF6CxF,CN3CI,AHQC,AWVoF,CbajG,CWgCW,AXhCA,IWgCI,EXhCf,CAAkB,EEHV,CAAiB,ISmCV,CAAA,ETnCP,MSmCG,CAAa,SAAb,CAAX;AN7CgD,AHWxC,AFGJ,AadmE,KAArD,Cbcd,AadJ,CRAW,CAHO,CLiBX,EAAC,MADU;AWiClB,AN1CI,ALWA,AadJ,MRGI,ALWA,EW+BD,CE7CE,GRGK,EAAE,CAAC,ALWA,EAAC,CW+BD,AXjCK,CaZlB,CAAgB,EF6CC,CAAjB,EAAmB,UE7CnB,CAAgC,CAAhC;AF8CI,ANlDc,AHed,AFIA,AadJ,KRLA,CLmBI,GadC,CF6CG,CTnCC,CAAL,AFIM,EW+BE,AX/BD,GW+BI,CE7Cf,CbcgB,EW+BG,AE7CF,CF6CG,EX/BT,CAAW,AadD,EF6CN,CAAY,IAAI,CAAC,AE7CX,CAAA,KF6CM,EE7CV,CAAW,CbcjB,CW+BgC,AX/BF,EadxB,CF6CS,CE7CO,EF6CiB,CAAnC,AX/BJ,AadM,CF6Cb,CX/B6C,AadZ,GAApB,EAAwB,OAAxB,EAAgC,KAAK,IAArC,CAAjB;ARIA,AHOQ,AFIA,AadR,QbcQ,CKXH,AQHA,IXUQ,AFIA,CKXb,CAAW,ALWG,CADmC,AabjD,CAAa,GAAb,CRGA,AQHiB,CRGC,EHOV,CAAiB,IWVzB,CAA0B,EXUlB,GWVuB,SAA/B,EAAyC,KAAzC;AF6CI,ANzCA,AHOI,AFIA,AabX,GA5BD,GR8BQ,ELWI,CKXD,CMyCC,CNzCA,ALWG,EAAC,CW8BA,GAAG,AN1CG,CM0CV,IAAY,CAAhB,EAAkB;AACd,ANzCJ,AHNJ,AFciD,MKR7C,CLQO,CAHO,IWoCN,GNzCC,EAAC,CMyCI,AN3CA,GM2CG,KAAK,UAAL,CAAgB,SAAhB,CAAb;AACA,ANzCJ,AHOP,AFIO,AadR,EAAA,CXbA,GGgBQ,ALWA,EW8BI,GE5CZ,CF4CgB,ANzCF,ALWA,Aadd,CF4CiB,CNzCF,ALWC,CAAC,EW8BL,ENzCQ,CMyCI,CE5CxB,CAAA,ERGe,CMyCc,ANzCH,GQH1B,GAAA,QF4CwB,CAAoB,CE5CrC,ERGQ,CAA8B,CQH7C,CF4CkD,CAAC,AE5ChC,CF4C+B,CAA1B,CNzCT,CMyCuC,CNzCF,AQHpD,EAA+B,OF4CiC,GAAC,CAAzC,CAAZ;AACA,ANzCA,ALGU,AaNpB,KbME,GWsCQ,ANzCA,CQHL,GF4CS,CAAC,ANzCA,AQHf,CAAU,CRGM,EADkC,CM0CxC,EE5CV,CF4CuB,KAAK,cAAL,CAAoB,MAAM,CAAC,CAAD,CAA1B,EAA8B,UAAU,GAAC,CAAzC,CAAb;AAEH,AN1CG,AHOhB,AFIQ,AadF,OFwCM,CNrCI,CHOhB,AFIa,AadF,ERGQ,EM2CH,AN3CI,CHOpB,AFIQ,CAAW,Gadb,CAAe,Ebcb,CAAkB,GadpB;AF+CU,AN9CwC,AHvDxD,AFqEY,AadN,CXvDN,CAA4C,IFqEhC,CKdO,CAHO,AHpDwB,CAAC,AFqEpC,AadJ,EbcK,CWgCI,CE9Cd,CAAU,EXvD4B,CAAe,CSqGjC,AXjCA,EabpB,CF8CuB,ETrGe,CAAsB,ESqGhC,ITrGlC,CAAA,KSqG6B,CAAgB,SAAhB,CAAb;AACA,AN3CJ,ALWA,AadJ,MRGI,ALWA,EWgCI,CE9CH,GF8CO,AN3CF,CM2CG,CN3CD,CAAC,ALWA,EWgCL,AXhCM,CAFI,CaZlB,CF8CoB,AE9CJ,KF8CS,EE9CzB,CAAwB,WF8CJ,CAAoB,CE9CL,KF8CW,AE9CN,CF8CO,CAAD,CAA1B,CE9Ce,CF8Ce,AE9CL,MAA7C,IF8C4D,GAAC,CAAzC,CAAZ;AACA,ANnDU,ALmBd,AadP,GALD,ERAI,CLmBI,EWgCI,IAAI,AXhCF,CWgCG,CXhCF,IWgCH,CXhCQ,EWgCK,GXhCV,CAAW,CWgCI,cAAL,CAAoB,EXhC9B,CAA8B,GWgCM,CAAC,CAAD,CAA1B,CXhCV,CWgCwC,CXhCF,SWgCY,GAAC,CAAzC,CAAb;AAEH,AN5CL,ALWQ,QAAA,CKXH,ILWQ,CKXb,CAAW,ALWG,CADmC,KKVjD,CAAkB;AM6CjB,AN5CG,ALWI,AafhB,MRIY,ELWI,CKXD,AQJf,ERIgB,ALWG,EAAC,KafpB,IRG0B;AAEd,ALQ6C,AajEzD,CAAA,CAA+B,IRyDnB,CLQO,CAHO,Aa9DW,CAAC,KAAtC,CRyDqB,AQzDrB,ERyDsB,CAFI;AM+ClB,AN5CI,ALWA,MKXA,ALWA,KWiCG,CN5CG,ALWA,EKXC,ALWC,CWiCZ,AXjCa,IKXG,KAAL,CAAW,kBAAX,CAA8B,MAA9B,EAAqC;AM6CnD,AN5CW,ALGU,Aa9Db,GFoFT,EXtBI,Ea9DK,CR2DG,AQ3DH,KR2DQ,EAAC,CADkC,CQ1D3C,GAAA,SAAA;AR4DG,ALWR,QKXQ,CLWH,EKXM,EAAC,CLWZ,CAAW,MAAX,CAAkB;AWiCtB,AN9CoD,ALc5C,EWgCR,GAAA,CAAA,AXhCQ,CKdO,CAHO,CLiBX,EAAC,IWgCZ,AXjCsB,CWiCtB,UAAA,GAAA,UAAW,SAAX,EAA8B;AAC1B,AN3CI,ALWA,MKXA,ALWA,EWgCA,GAAG,CN3CG,EM2CA,AN3CE,CAAC,ALWA,EAAC,CWgCA,AXlCI,CWkCH,KAAL,CAAW,SAAS,CAAC,CAAV,GAAc,IAAzB,CAAV;AACA,ANnDkB,ALmBd,KKnBJ,CLmBI,EWgCA,GAAG,CXhCG,EWgCA,AXhCC,IWgCG,CAAC,AXhCC,KWgCN,AXhCC,CWgCU,AXhCC,SWgCQ,CAAC,CAAV,GAAc,IAAzB,AXhCC,CWgCX,AXhCyC,OAA9B,EAAsC;AWiCjD,AN3CA,ALWQ,QWgCJ,AXhCI,CKXH,ILWQ,CKXb,CM2CW,AN3CA,ALWG,EADmC,CWiC5B,GN3CrB,CM2CyB,AN3CP,CM2CQ,KAAL,CAAW,IAAI,CAAC,MAAL,MAAiB,GAAG,GAAG,GAAvB,IAA8B,GAAzC,CAArB;AACA,AN3CI,ALWI,MKXJ,EM2CA,AXhCI,CKXD,EAAC,ALWG,EAAC,IWgCC,AN5CK,GM4CD,SAAS,CAAC,CAAV,GAAc,OAA/B;AACA,AN3CI,ALQ6C,MKR7C,CLQO,CWmCP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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["export const CST ={\n    SCENES:{\n        LOAD:\"LOAD\",\n        MENU:\"MENU\",\n        PLAY:\"PLAY\"\n    },\n    CASTDIRECTION:{\n        NORTH:0,\n        EAST:1,\n        SOUTH:2,\n        WEST:3\n    }\n}","import {CST} from\"../CST\"\nexport class LoadScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key:CST.SCENES.LOAD\n        })\n    }\n\n    preload(){\n        this.load.image(\"play\",\"./assets/play_button.png\")\n        this.load.image(\"options\",\"options_button.png\")\n        this.load.spritesheet(\"enemy\",\"/assets/enemy.png\",{\n            frameWidth:32,\n            frameHeight:32\n        })\n        this.load.spritesheet(\"Mage\",\"./assets/mage.png\",{\n            frameWidth:64,\n            frameHeight:64\n        })\n        this.load.spritesheet(\"FireBall\",\"./assets/Fireball_68x9.png\",{\n            frameWidth:68,\n            frameHeight:9\n        })\n        this.load.spritesheet(\"EarthBall\",\"./assets/EarthBall.png\",{\n            frameWidth:48,\n            frameHeight:48\n        })\n        this.load.image(\"IceBall\",\"./assets/IceBall.png\")\n        \n    }\n    create(){\n        this.anims.create({\n            key:\"EarthBall\",\n            frameRate:10,\n            frames:this.anims.generateFrameNames(\"EarthBall\",{\n                start:0,\n                end:12\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"FireBall\",\n            frameRate:10,\n            frames:this.anims.generateFrameNames(\"FireBall\",{\n                start:0,\n                end:59\n            }),\n            repeat: -1\n        });\n        this.scene.start(CST.SCENES.MENU)\n        this.anims.create({\n            key:\"down\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:0,\n                end:2\n            }),\n            repeat: -1\n        })\n        this.anims.create({\n            key:\"left\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:3,\n                end:5\n            }),\n            repeat: -1\n        })\n        this.anims.create({\n            key:\"right\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:7,\n                end:9\n            }),\n            repeat: -1\n        })\n        this.anims.create({\n            key:\"up\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"enemy\",{\n                start:10,\n                end:12\n            }),\n            repeat: -1\n        })\n    }\n\n}","import {CST} from \"../CST\"\nexport class MenuScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key:CST.SCENES.MENU\n        })\n    }\n    create(){\n        let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.40,\"play\")\n        playButton.setInteractive();\n        this.scene.start(CST.SCENES.PLAY)\n\n        playButton.on(\"pointerup\",() =>{\n            this.scene.start(CST.SCENES.PLAY)\n        })\n    }\n}","export default abstract class Spell extends Phaser.Physics.Arcade.Sprite{\n    readonly SPEED = 200\n    readonly DIRECTIONS:{[index:number]:[x:number,y:number]} = {\n        0:[0,-1],\n        1:[1,0],\n        2:[0,1],\n        3:[-1,0]\n    }\n    readonly BOXVALUE:{[index:number]:number} = {\n        1:180,\n        3:0\n    }\n\n    textureKey:string\n    scene:Phaser.Scene\n    myDirection:number\n    playerX:number\n    playerY:number\n    xSpeed:number\n    ySpeed:number\n    constructor(scene:Phaser.Scene,playerX:number, playerY:number,textureKey:string,direction:number){\n        super(scene,playerX,playerY,textureKey)\n        this.textureKey = textureKey\n        this.scene = scene\n        this.playerX = playerX\n        this.playerY = playerY\n        this.myDirection = 0\n        scene.add.existing(this)\n        scene.physics.add.existing(this)\n        this.addToUpdateList()\n        this.addToDisplayList()\n        this.xSpeed = this.SPEED * this.DIRECTIONS[this.myDirection][0]\n        this.ySpeed = this.SPEED * this.DIRECTIONS[this.myDirection][1]\n        this.play(textureKey)\n    }   \n    preUpdate(time:number,delta:number){\n        super.preUpdate(time,delta)\n        this.setVelocity(this.xSpeed,this.ySpeed)\n    }\n    Cast(x:number,y:number,direction:number){\n        this.myDirection = direction\n        this.xSpeed = this.SPEED * this.DIRECTIONS[this.myDirection][0]\n        this.ySpeed = this.SPEED * this.DIRECTIONS[this.myDirection][1]\n        this.body.reset(x,y)\n        this.setActive(true)\n        this.setVisible(true)\n        this.setVelocityX(this.xSpeed)\n        this.setVelocityY(this.ySpeed)\n        switch(direction){\n            case 3:\n                this.setRotation(0)\n                break;\n            case 0:\n                this.setRotation(1.5708)\n                break;\n            case 1:\n                this.setRotation(3.14159)\n                break;\n            case 2:\n                this.setRotation(4.71239)\n                break;\n        }\n    }\n    abstract Behavior() : any\n}","import Spell from \"./spell\"\n\nexport default class BasicSpell extends Spell{\n    readonly TRAVELDISTANCE = 10\n    angle:number\n    hitboxX:number\n    hitboxY:number\n    constructor(scene:Phaser.Scene,playerX:number,playerY:number,name:string,direction:number){\n        super(scene,playerX,playerY,name,direction)\n        if(this.myDirection % 2 === 0){\n            this.angle = -90 * this.DIRECTIONS[this.myDirection][1]\n            this.hitboxX = 10\n            this.hitboxY = 70\n        }else{\n            this.angle = this.BOXVALUE[this.myDirection]\n            this.hitboxX = 70\n            this.hitboxY = 10\n        }\n        this.setSize(this.hitboxX,this.hitboxY)\n        this.setAngle(this.angle)\n    }\n    CalculateBox(){\n\n    }\n    Behavior(){\n        if (Phaser.Math.Distance.Between(this.x,this.y,this.playerX,this.playerY) > 100)\n        {\n            this.setActive(false)\n            this.setVisible(false)\n        }\n    }\n}","import BasicSpell from \"../spells/basicspell\";\nimport Spell from \"../spells/spell\";\n\nexport default class SpellManager extends Phaser.Physics.Arcade.Group{\n    scene: Phaser.Scene\n    constructor(scene:Phaser.Scene){\n        super(scene.physics.world,scene)\n        this.scene = scene\n\n       \n\n    }\n    CreateNewSpell(index:number,x:number,y:number,direction:number){\n        let spellList = [\n            new BasicSpell(this.scene,0,0,\"FireBall\",0),\n            new BasicSpell(this.scene,0,0,\"IceBall\",0),\n            new BasicSpell(this.scene,0,0,\"EarthBall\",0)\n        ]\n        let spell = spellList[index]\n            spell.Cast(x,y,direction)\n        \n    }\n    Remove(){\n\n    }\n\n    update(){        \n        \n    }\n}","import SpellManager from \"./spellbook/SpellManager\";\n\nexport class Player extends Phaser.Physics.Arcade.Sprite{\n  \n    keyboard: Phaser.Input.Keyboard.KeyboardPlugin\n    spellManager:SpellManager;\n    currentSpell: number\n    direction:number\n    health:number\n    constructor(scene:Phaser.Scene, x:number,y:number, textrue:string,\n        keyboard:Phaser.Input.Keyboard.KeyboardPlugin){\n        super(scene,x,y,textrue);\n        scene.add.existing(this)\n        scene.sys.updateList.add(this);\n        scene.sys.displayList.add(this);\n        scene.physics.add.existing(this)\n        this.setOrigin(0,0)\n        scene.physics.world.enableBody(this)\n        this.setCollideWorldBounds(true)\n        this.setScale(.7)\n        this.setSize(35,32).setOffset(15,30)\n        this.keyboard = keyboard;\n        this.health = 100\n        this.direction = 0\n        this.spellManager = new SpellManager(this.scene);\n        this.keyboard.addKeys('W,A,S,D,ONE,TWO,THREE');\n        this.currentSpell = 0;\n        this.create()\n    }\n    preload(){\n    }\n    create(){\n        \n        this.anims.create({\n            key:\"up\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:1,\n                end:8\n            }),\n            repeat: -1\n            \n        });\n        this.anims.create({\n            key:\"idle-up\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:0,\n                end:0\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"left\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:10,\n                end:17\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"idle-left\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:9,\n                end:9\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"down\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:19,\n                end:26\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"idle-down\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:18,\n                end:18\n            }),\n            repeat: -1\n        });    \n        this.anims.create({\n            key:\"right\",\n            frameRate:7,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:27,\n                end:37\n            }),\n            repeat: -1\n        });\n        this.anims.create({\n            key:\"idle-right\",\n            frameRate:1,\n            frames:this.anims.generateFrameNames(\"Mage\",{\n                start:27,\n                end:27\n            }),\n            repeat: -1\n        });\n        this.scene.input.on('pointerdown',(pointer:any) =>{\n            this.Casting()\n        },this.scene)\n\n\n        this.keyboard.on('keydown-ONE',()=>{\n            this.currentSpell = 0\n            console.log(\"spell 1\")\n\n        })\n        this.keyboard.on('keydown-TWO',()=>{\n            this.currentSpell = 1\n            console.log(\"spell 2\")\n\n        })\n        this.keyboard.on('keydown-THREE',()=>{\n            this.currentSpell = 2\n            console.log(\"spell 3\")\n        })\n        this.keyboard.on('keydown-W',() =>{\n            this.setVelocityY(-250)\n            this.direction = 0\n        })\n        this.keyboard.on('keydown-D',()=>{\n            this.setVelocityX(250)\n            this.direction = 1\n        },this)\n        this.keyboard.on('keydown-S',()=>{\n            this.setVelocityY(250)\n            this.direction = 2\n        })\n        this.keyboard.on('keydown-A',() =>{\n            this.setVelocityX(-250)\n            this.direction = 3\n        },this)\n\n        this.keyboard.on('keyup-A',()=>{\n            this.setVelocityX(0)\n            this.play('idle-left',true)\n\n        },this)\n\n        this.keyboard.on('keyup-D',()=>{\n            this.setVelocityX(0)\n            this.play('idle-right',true)\n\n        },this)\n        this.keyboard.on('keyup-W',()=>{\n            this.setVelocityY(0)\n            this.play('idle-up',true)\n        },this)\n\n        this.keyboard.on('keyup-S',()=>{\n            this.setVelocityY(0)\n            this.play('idle-down',true)\n\n        },this)\n    }\n    update(){\n        this.Movement()\n        this.ChangeSpell()\n        this.spellManager.update()\n        if(this.health == 0){\n            this.scene.scene.restart()\n        }\n    }\n    ChangeSpell(){\n       \n    }\n    Casting(){\n        this.spellManager.CreateNewSpell(this.currentSpell,this.body.x + this.body.width / 2,this.body.y + this.body.height / 2,this.direction)\n    }\n    Movement() {\n        this.body.velocity.normalize().scale(100)\n        if(this.body.velocity.x > 0 || this.body.velocity.x < 0 ||\n                this.body.velocity.y > 0 || this.body.velocity.y < 0)\n        {\n            if(this.body.velocity.x > 0)\n            {\n                if(this.body.velocity.y > 0)\n                    this.play(\"down\",true)\n                else\n                    this.play(\"right\",true)\n            }\n            else if(this.body.velocity.x < 0){\n                if(this.body.velocity.y > 0)\n                    this.play(\"down\",true)\n                else\n                    this.play(\"left\",true)\n            }\n            else{\n                if(this.body.velocity.y > 0)\n                    this.play(\"down\",true)\n                else if(this.body.velocity.y < 0)\n                    this.play(\"up\",true)\n            }\n            \n          /*  if(this.body.velocity.y < 0){\n                console.log(\"sad\")                \n                this.play(\"up\",true);\n            }\n            else if(this.body.velocity.y > 0){\n                this.play(\"down\",true)\n            }*/\n        }\n        \n    }\n    GetBody(){\n        return this.body\n    }\n    \n}\n\n\n","import { PlayScene } from \"../../scenes/PlayScene\"\nimport { Player } from \"../playerComponents/Player\"\n\nexport default class Walker extends Phaser.Physics.Arcade.Sprite{\n    player:Player\n    private readonly STATES = [\n        \"IDLE\",\n        \"CHASE\"\n    ]\n    constructor(scene:Phaser.Scene, x:number,y:number, texture:string,player:Player){\n        super(scene,x,y,texture)\n        this.scene = scene\n        scene.add.existing(this)\n        scene.physics.add.existing(this)\n        this.addToUpdateList()\n        this.addToDisplayList()\n        this.player = player\n        this.play(\"down\")\n    }\n\n    update(){\n        let playerBody = this.player.GetBody()\n        if(Phaser.Math.Distance.BetweenPoints(this.body,playerBody) < 300){\n            this.scene.physics.moveToObject(this,playerBody,50)\n        }else{\n            this.scene.physics.moveToObject(this,playerBody,0)\n        }\n        if(Phaser.Math.Distance.BetweenPoints(this.body,playerBody) < 25){\n            this.player.health -= 1\n        }\n    }\n}","import { Container } from \"./Container\";\nimport {TreeNode} from \"./TreeNode\"\nexport class BinaryTree{\n    root:TreeNode\n    constructor(root:TreeNode){\n        this.root = root\n    }\n    preOrder(rooms:Container[]) {\n        \n        let current = this.root;\n      \n        let traverse = (node:TreeNode) => {\n          if(node.left == undefined && node.right == undefined){\n              rooms.push(node.container)\n          }\n          if (node.left) traverse(node.left);\n          if (node.right) traverse(node.right);\n        };\n      \n        traverse(current);\n      }\n}\n\n","class Point{\n    x:number\n    y:number\n    constructor(x:number,y:number){\n        this.x = x\n        this.y = y\n    }\n}\nexport {Point}","import {Point} from \"./Point\"\nclass Container{\n    x:number\n    y:number\n    w:number\n    h:number\n    center:Point\n    constructor(x:number,y:number,w:number,h:number){\n        this.x = x\n        this.y = y\n        this.w = w\n        this.h = h\n        this.center = new Point(Math.floor(this.x + (this.w/2)),Math.floor(this.y + (this.h/2)))\n    }\n}\n\nexport {Container}","import { Container } from \"./Container\";\n\nclass TreeNode{\n    container: Container;\n    left?:TreeNode\n    right?:TreeNode\n    constructor(container:Container){\n        this.container = container\n        this.left = this.right = undefined\n    }\n}\n\nexport {TreeNode}","// First Create world X,Y Tiles \n// Pick Random Point and Axis to split on \n// On That Axis and point SPlit\n// Store Partitions\n// On each Partition Pick Random Point and Axis to split on \nimport { Renderer } from \"phaser\"\nimport {BinaryTree} from \"./BSP/BinaryTree\"\nimport { Container } from \"./BSP/Container\"\nimport { TreeNode } from \"./BSP/TreeNode\"\nexport default class BSP{\n    readonly GROUND = 300\n    readonly WALL = 510\n    readonly minSize = 6\n    readonly HEIGHT = 80\n    readonly WIDTH = 80\n    width:number\n    height:number\n    roomCount:number\n    world:any\n    leafs:any[]\n    constructor(){\n        this.width = this.WIDTH\n        this.height = this.HEIGHT\n        this.roomCount = 0\n        this.world = 0\n        this.leafs = []\n    }\n    BSPController(){\n        let rootContainer = new Container(0,0,this.width,this.height)\n        let rooms:Container[] = []\n        let root = this.SplitDirection(rootContainer,3)\n        let tree = new BinaryTree(root)\n        tree.preOrder(rooms)\n        this.world = this.CreateWorld(this.width,this.height)\n        rooms.forEach(room =>{\n            let roomPos = (room.y * this.width) + room.x\n            for(let i = 0; i < room.w; i++){\n                this.world[roomPos + i] = this.WALL\n                this.world[(roomPos + i) + (this.width * (room.h - 1))] = this.WALL\n                for(let j = 0; j < room.h; j++){\n                    let index = roomPos + (this.width * j)\n                    this.world[index] = this.WALL\n                    this.world[index + room.w - 1] = this.WALL\n                }\n            }\n        })\n        this.leafs = rooms\n        this.PostOrderTraversal(tree.root)\n        let cWorld:any = []\n        while(this.world.length){\n            cWorld.push(this.world.splice(0,this.width))\n        }\n        return cWorld\n    }\n\n    PostOrderTraversal(node:TreeNode){\n        if(node != undefined){\n            this.PostOrderTraversal(node.left)\n            this.PostOrderTraversal(node.right)\n            if(node.left != undefined && node.right != undefined){\n                this.ConnectContainers(node.left,node.right)\n            }\n        }\n    }\n    ConnectContainers(nodeLeft:TreeNode,nodeRight:TreeNode){\n        if (nodeLeft.container.center.x < nodeRight.container.center.x){\n            for(let x = nodeLeft?.container.center.x; x <= nodeRight.container.center.x; x++){\n                let xPos =  nodeLeft.container.center.y * this.width + x\n                let xPosPad =  (nodeLeft.container.center.y + 1) * this.width + x\n                this.world[xPos] = this.GROUND\n                this.world[xPosPad] = this.GROUND\n\n            }\n        }\n        if(nodeLeft.container.center.y < nodeRight.container.center.y){\n            for(let y = nodeLeft?.container.center.y; y <= nodeRight.container.center.y; y++){\n                let yPos =  y * this.width + nodeLeft.container.center.x\n                let yPosPad =  y * this.width + nodeLeft.container.center.x + 1\n\n                this.world[yPos] = this.GROUND\n                this.world[yPosPad] = this.GROUND\n\n            }\n        }\n    }\n    GetXY(x:number,y:number){\n        let xPos =  y * this.width + x\n\n        return xPos\n    }\n    SplitDirection(container:Container,iterations:number){\n        let node = new TreeNode(container)\n        if(iterations != 0){\n            let rand = Math.floor((Math.random() * 100) + 0)\n            if( rand % 2 == 0){\n                let splits = this.WorldCopyX(container)\n                node.left = this.SplitDirection(splits[0],iterations-1)\n                node.right = this.SplitDirection(splits[1],iterations-1)\n\n            }\n            else{\n                let splits = this.WorldCopyY(container)\n                node.left = this.SplitDirection(splits[0],iterations-1)\n                node.right = this.SplitDirection(splits[1],iterations-1)\n\n            }\n        }\n\n        return node\n    }\n    WorldCopyX(container:Container){\n        let min = Math.floor(container.w * 0.40);\n        let max = Math.floor(container.w * 0.70); \n        let splitOn:number = Math.floor(Math.random() * (max - min) + min);\n        let remainder = (container.w - splitOn)\n        let containerL = new Container(container.x,container.y,container.w - remainder, container.h)\n        let containerR = new Container(container.x + splitOn,container.y,container.w  - splitOn, container.h)\n        if(containerL.w < this.minSize || containerR.w < this.minSize){\n            return this.WorldCopyX(container)\n        }else{\n            return [containerL,containerR]\n        }\n        \n\n    }\n    WorldCopyY(container:Container){\n        let min = Math.floor(container.h * 0.30);\n        let max = Math.floor(container.h * 0.70); \n        let splitOn:number = Math.floor(Math.random() * (max - min) + min);\n        let remainder = (container.h - splitOn)\n        let containerL = new Container(container.x,container.y,container.w,  container.h - remainder)\n        let containerR = new Container(container.x,container.y + splitOn ,container.w , container.h - splitOn )\n        if(containerL.h < this.minSize || containerR.h < this.minSize){\n            return this.WorldCopyY(container)\n        }else{\n            return [containerL,containerR]\n        }\n    }\n  \n\n    CreateWorld(width:number,height:number){\n        var level:number[] = [];\n        for(let i = 0; i < width; i++){\n            for(let j = 0; j < height; j++){\n                level.push(this.GROUND)\n            }\n        }   \n        return level\n    }\n\n}","import { Player } from \"../playerComponents/Player\"\n\nexport default class Exit extends Phaser.Physics.Arcade.Sprite{\n    player:Player\n\n    constructor(scene:Phaser.Scene, x:number,y:number, texture:string,player:Player){\n        super(scene,x,y,texture)\n        this.scene = scene\n        scene.add.existing(this)\n        scene.physics.add.existing(this)\n        this.addToUpdateList()\n        this.addToDisplayList()\n        this.player = player\n    }\n\n    update(){\n        let playerBody = this.player.GetBody()\n        if(Phaser.Math.Distance.BetweenPoints(this.body.center,playerBody.center) <= 25){\n            this.scene.scene.restart()\n        }\n    }\n}","import {CST} from\"../CST\"\nimport { Player } from \"../components/playerComponents/Player\";\nimport Walker from \"../components/NPC/walker\"\nimport MapGenerator from \"../MapGenerator\"\nimport BSP from \"../BSP\";\nimport Exit from \"../components/exit/exit\";\nexport class PlayScene extends Phaser.Scene{\n    readonly WALL = 510\n    readonly tileSize = 16\n    mage!:Player\n    testEnemy!:Walker\n    exit!:Exit\n    healthText!:any\n    constructor(){\n        super({\n            key:CST.SCENES.PLAY\n        })\n    }\n\n    preload(){\n        this.load.image(\"terrain\",\"./assets/terrain.png\")\n        this.load.tilemapTiledJSON(\"map\",\"./assets/map.json\")\n    }\n    create(){\n        let bsp = new BSP();\n        let world = bsp.BSPController();\n\n        var map = this.make.tilemap({ data: world, tileWidth: this.tileSize, tileHeight: this.tileSize });\n        var tiles = map.addTilesetImage('terrain');\n        var layer = map.createLayer(0, tiles, 0, 0);\n        layer.setCollision(this.WALL,true);\n        let terrain = map.addTilesetImage(\"terrain\",\"terrain\");\n        this.physics.world.setBounds(0,0,map.widthInPixels,map.heightInPixels)\n        let keyboard = this.input.keyboard\n        this.mage = new Player(this,map.width,map.height,\"Mage\",keyboard)\n        this.cameras.main.setSize(800,600);\n        this.cameras.main.startFollow(this.mage)\n        this.cameras.main.setBounds(0,0,80 * this.tileSize,this.tileSize * 80)\n        this.physics.add.collider(this.mage,layer)\n        let rooms = bsp.leafs\n        let exitRoom =  Math.floor((Math.random() * rooms.length) + 0)\n        console.log(rooms[exitRoom])\n        console.log(rooms[exitRoom][\"center\"].x,rooms[exitRoom][\"center\"].y)\n        let xPos = rooms[exitRoom][\"center\"].x * this.tileSize\n        let yPos = rooms[exitRoom][\"center\"].y * this.tileSize\n        this.exit = new Exit(this,xPos,yPos,\"Mage\",this.mage)\n        this.healthText = this.add.text(16, 16, `Health: ${this.mage.health}`, { fontSize: '32px' ,color:\"#ffffff\"});\n        this.healthText.setScrollFactor(0)\n        this.testEnemy = new Walker(this,150,150,\"enemy\",this.mage)\n        this.physics.add.collider(this.testEnemy,layer)\n\n    }\n    update(time:number,delta:number){\n      this.mage.update()\n      this.testEnemy.update()\n      this.exit.update()\n        this.healthText.setText(`Health: ${this.mage.health}`)\n    }\n}      ","/** @type {import(\"../typings/phaser\")} */\nimport { LoadScene } from \"./scenes/LoadScene\";\nimport { MenuScene } from \"./scenes/MenuScene\";\nimport { PlayScene } from \"./scenes/PlayScene\";\n\n \n\nlet game = new Phaser.Game({\n    width:800,\n    height:600,\n    scene:[LoadScene,MenuScene,PlayScene],\n    render:{\n        pixelArt:true\n    },\n    physics:{\n        default:\"arcade\",\n        arcade:{\n            debug:true\n        }\n    }\n})"]}